NEXT VERSION

V3.3.2 - 2007-09-14
common:
- VINAX device specific implementation added
  + DSL_VNX_GainAllocationTableGet() added full ADSL support
  + DSL_VNX_SnrAllocationTableGet() added full ADSL support
Bug fix(es):
- Amazon-SE/Danube (SMS00668013):  DSL Data Rate Update problems during DSL
  Plugin/Plugout
  DSL_DANUBE_ChannelRateUpdate() implementation corrected
- VINAX (SMS00668269) g997lacs in ADSL mode
  0x0449 message now also available for the ADSL mode (starting from FW FS4)
- VINAX (SMS00667704) g997bansg and g997bang not supported for ADSL
  ADSL specific implementation added
- VINAX (SMS00668701) G997_LineInventoryGet returns wrong value for
  g994VendorID ATU-R
  There were variance between MCAT3.9 MsgId=0x4103 description and the actual
  FW.
  The mentioned msg is marked as unavailable for the ADSL mode.
  At the same time this message is successfuly handled by the ADSL FW.
  DSL CPE API implementation corrected accordingly to support this message in
  the ADSL mode.
- VINAX (SMS00668799) G997_LineStatusGet: some erroneous parameters in VDSL
  mode
  DSL_VNX_LineStatusGet() Implementation updated according to the latest
  MCAT3.9.1. Also SMS00656158 issue was taken into account.
- VINAX (SMS00668494) FramingParameterStatusGet (fpsg) not working correctly in
  ADSL mode
  Implementation corrected within DSL_VNX_SendMsgAdslFrameDataGet()
- VINAX (SMS00668516) g997fpsg delivers wrong values in ADSL mode
  Implementation corrected within DSL_VNX_SendMsgAdslFrameDataGet()
- VINAX (SMS00668233) g997csg: ActualImpulseNoiseProtection is not calculated
  correctly.
  Equation for ActualImpulseNoiseProtection corrected according to the
  DSL API (CO)

V3.3.1 - 2007-09-13
user interface definition change(s):
- Common (SMS00668806): Added new interface parameter 'nDeltDataType' for DELT
  data access ioctls, DSL_G997_Delt<XXX>Get (not functionally supported yet!)
- Common (SMS00668804): Added new autoboot state machine configuration option
  'bWaitBeforeConfigWrite' within 'DSL_AutobootConfigData_t' structure which is
  used for 'DSL_FIO_INIT' and 'DSL_FIO_AUTOBOOT_CONFIG_SET/GET' ioctls
  (not functionally supported yet!)

V3.3.0 - 2007-09-07
Bug fix(es):
- VINAX (SMS00667237): auto boot load firmware (alf) leads to an CLI
  stuck wenn ADSL-FW is loaded.
  Security check added to the VINAX DSL_DEV_FwDownload() function
- source code cleanup
- DSL_VNX_CurrentBandListGet() implementation removed

V3.2.3 - 2007-08-31
- DANUBE device specific implementation added
  + Debug message dump functionality extended: 0xFF debug level used to enable
    message dump printouts in both direction (ME->ARC, ARC->ME) on each access
    (read or write)
  + DSL_DANUBE_CmvAccessTypeGet() implementation added
  + DSL_DANUBE_CmvByteCountGet() implementation added
  + DSL_DANUBE_CmvMessageDump() implementation added
  + DSL_DEV_DBG_DeviceMessageSend() check for unsupported opcodes added

V3.2.2 - 2007-08-27
user interface definition change(s):
- DSL_DataPathCountersTotalData_t within DSL_DataPathCountersTotal_t
  renamed to DSL_LinePathCountersTotalData_t; UnitsCrc, UnitsAlign,
  SingleCollisionFrames, MultipleCollisionFrames fields excluded from the
  DSL_DataPathCountersTotalData_t type
common:
- DSL_LinePathCountersTotalGet() function implementation added
- Added ioctls
  + DSL_FIO_LINE_PATH_COUNTERS_TOTAL_GET ioctl implemented
- DANUBE device specific implementation added
  + DSL_DEV_DBG_DeviceMessageSend() function implementation adapted to support
    additional opcodes
- VINAX device specific implementation added
  + DSL_DEV_LinePathCountersTotalGet() implementation added

V3.2.1 - 2007-08-24
user interface definition change(s):
- Added ioctls
  + DSL_FIO_AUTOBOOT_CONFIG_SET
  + DSL_FIO_AUTOBOOT_CONFIG_GET
- nFwId removed from the DSL_FirmwareRequestData_t type\
- DSL_FwDownloadStatusData_t type definition added
- New event definition added, DSL_EVENT_S_FIRMWARE_DOWNLOAD_STATUS
- DSL_AutobootCtrlSet_t type extended with  DSL_AUTOBOOT_CTRL_CONTINUE
- DSL_AutobootStatGet_t type extended with  DSL_AUTOBOOT_STATUS_LINK_ACTIVATE_WAIT
- DSL_AutobootConfig_t type definition added
- Added new field nAutobootConfig within DSL_InitData_t type
- Added DSL_WRN_NOT_ALLOWED_IN_CURRENT_STATE warning definition within
  DSL_Error_t type
- DSL_Autoboot_State_t type extended with new Autoboot state definition
  DSL_AUTOBOOTSTATE_LINK_ACTIVATE_WAIT
- new fields in the DSL Context structure
  + bAutobootContinue
  + nAutobootConfig
common:
- DSL_AutobootControlSet(), DSL_AUTOBOOT_CONTROL_CONTINUE handling added
- DSL_AutobootConfigSet() implementation added
- DSL_AutobootConfigGet() implementation added
- DSL_EventStatusMaskConfigSet/Get(), DSL_EVENT_S_FIRMWARE_DOWNLOAD_STATUS
  event handling added
- New Autoboot state added DSL_AUTOBOOT_LINK_ACTIVATE_WAIT
- DSL_AutobootStateCheck, DSL_AUTOBOOT_LINK_ACTIVATE_WAIT handling added
- DANUBE device specific implementation added
  + DSL_DEV_FwDownload(): DSL_EVENT_S_FIRMWARE_DOWNLOAD_STATUS event generation
    added
  + DSL_DEV_LinkActivate() implementation added
- VINAX device specific implementation added
  + DSL_DEV_FwDownload(): DSL_EVENT_S_FIRMWARE_DOWNLOAD_STATUS event generation
    added
  + DSL_DEV_LinkActivate() implementation added
Bug fix(es):
- VINAX (SMS00659348): ADSL/VDSL automode handling does not work correctly
  Corrected internal handling to "play" together with extended autoboot
  script handling (refer to UTP SMS00656161).

- VINAX (SMS00656161) possibility to send tunnel messages for configuration is missing
  Implementation adapted according to the description in the "Assignment Info Log"
  of the SMS00656161 issue
- Common (SMS00656158) g997lsg reports in ACTATP wrong values
  Issue found only for the VINAX VDSL mode. Fixed as workaround.
  The same fix is already found in the DSL CO API.
  The ACTAP US/DS values are swapped in the VDSL mode.

V3.2.0 - 2007-08-14
user interface definition change(s):
- Added additional firmware request type status 'DSL_FirmwareRequestData_t'
  within event (DSL_EventData_Union_t) and AutobootStausGet function
  (DSL_AutobootStatus_t)
Bug fix(es):
- Amazon-SE/Danube (SMS00658752): Mode select from the GUI does not work
  Corrected internal translation of modes that are included within OPTN 7
  within function DSL_DANUBE_ModeControlSet()

V3.1.1 - 2007-08-02
common:
- Changed polling times of following autoboot states to speed up the necessary
  time for recovering the link after an exception
  + DSL_AUTOBOOT_TRAINING_POLL_TIME   (5000ms -> 1000ms)
  + DSL_AUTOBOOT_INIT_POLL_TIME       (1000ms ->  100ms)
  + DSL_AUTOBOOT_DIAGNOSTIC_POLL_TIME (5000ms -> 1000ms)
  + DSL_AUTOBOOT_FW_READY_POLL_TIME   (1000ms ->  100ms)

V3.1.0 - 2007-08-01
-

V3.0.104 - 2007-07-31
user interface definition change(s):
- Added ioctls
  + DSL_FIO_INSTANCE_STATUS_GET
Bug fix(es):
- VINAX (SMS00645606): LineFeatureStatusGet (lfsg) is not functional
common:
- common implementation added
  + DSL_InstanceStatusGet() function added
  + DSL_IoctlInstanceHandleHelperCall() function added
  + Event handling implementation adapted according to the new requirements
    (instance specific, multiple open)
  * DSL_EventStatusMaskConfigSet/Get implementation adapted to be instance
    specific
  * DSL_G997_SnmpMessageReceive() implementation adapted to be instance specific
  * DSL_G997_AlarmMaskLineFailuresConfigSet() implementation adapted to be
    instance specific
  * DSL_G997_AlarmMaskDataPathFailuresConfigSet() implementation adapted to be
    instance specific
  + DSL_ERR_EVENTS_NOT_ACTIVE error code added
- DSL_BF_Event_t renamed back to DSL_EventType_t

V3.0.103 - 2007-07-30
user interface definition change(s):
- Removed ioctl
  + DSL_FIO_EVENT_ACTIVATION_CONTROL_SET
- Added ioctls
  + DSL_FIO_INSTANCE_CONTROL_SET
    (replacement for DSL_FIO_EVENT_ACTIVATION_CONTROL_SET)
  + DSL_FIO_INSTANCE_STATUS_GET (definition only by now)
  + DSL_FIO_LINE_PATH_COUNTER_TOTAL_GET (definition only by now)

V3.0.102 - 2007-07-27
Bug fix(es):
- VINAX (SMS00640221): Behaviour of g997csg is not correct.
   + implementation corrected, nActualDataRate copied to the nPreviousDataRate
     and reset to "0" after getting out of the showtime
- VINAX (SMS00649757) wrong number of parameters when writing xTC counters
   + CMD_G997_PTM_StatsSet (0x3953) message transferring corrected
- VINAX (SMS00649350) auto mode switching still leads to API blocking.
   + Unwanted behaviour, while sending unsupported FW messages: "API block" bug
     fixed 
- VINAX (SMS00649839) VDSL-DELT-showtime: no FE parameters for SNR, HLOG, QLN;
  no DELT test parameter.
   + FE parameters added. FE nMeasurement is not available from FW (always
     returned as 0)
- VINAX (SMS00640362 ) auto restart is performed by API even if DELT is triggered.
   + In the VINAX VDSL mode all DELT parameters can be retrieved only in the
     SHOWTIME state. This means that after leaving the DIAG_COMPLETE state modem
     goes into RESET/READY state and waits for the opposite side to start the
     HS and reach the SHOWTIME. In the VINAX ADSL mode (only starting from
     ver.3.0.0) all DELT parameters are stored in the DSL CPE API internal
     memory when the DIAG_COMPLETE state has been reached.
     Also the complete FW reload takes place in the ADSL mode after DIAG_COMPLETE
     state. All DELT parameters could be retrieved later via the appropriate
     ioctl from the DSL CPE API internal memory.
- COMMON (SMS00636711) G997_LineStatusGet: latn and satn values are not correct
   + implementation corrected, see current UTP Assignment Info Log
- [VINAX] (SMS00636093) auto mode switching does not work
common:
- proc/version" entry support for the DSL CPE driver added
- DSL_EventType_t renamed to DSL_BF_EventType_t
- DSL_DataReset() renamed to DSL_CtxDataUpdate
- new fields in the DSL Context structure
   + ActualInterleaveDelayUs
   + ActualInterleaveDelayDs
   + ActualImpulseNoiseProtectionUs
   + ActualImpulseNoiseProtectionDs
   + nChannelActualDataRatePrevUs
   + nChannelActualDataRatePrevDs

V3.0.101 - 2007-07-20
Bug fix(es):
- DSL_EfmMacConfigSet(), input parameters checks added, see SMS00624450
- DSL_TestModeControlSet(), input parameters checks added, see SMS00624450
- DSL_PM_ChannelCountersThresholdsCrossingCheck(),
  DSL_PM_LineCountersThresholdsCrossingCheck(),
  DSL_PM_DataPathCountersThresholdsCrossingCheck,
  implementation corrected, see SMS00636756
common:
- DSL_AuxLineInventoryGet(), implementation corrected to retrieve FE data from
  the Context
- DSL_AutobootHandleFwReady(), implementation added to handle
  DSL_AUTOBOOTSTATE_FIRMWARE_READY state
- New field(s) in the DSL CPE API Context
   + auxInventoryFe
- VINAX device specific implementation added
   + DSL_VNX_AuxLineInventoryFeGet()
   * DSL_VNX_FeInventoryGet(): Aux FE inventory retrieve added

V3.0.100 - 2007-07-14
common:
- Event handling, DSL_FIO_EVENT_ACTIVATION_CONTROL_SET ioctl implemented
- Multiple open
  + new structures defined
    - DSL_EventActivationControlSetData_t
    - DSL_EventActivationControlSet_t
  + open instances list defined
  + new function implemented
    - DSL_DriverCleanup()
  * DSL Context structure was updated
    - bFirmwareEventAssigned - new field
    - event stuff was moved to open context structure
  + DSL_OpenContext_t (open context for upper layer) defined
  * DSL_IOCTL_arg_t structure updated
    - eventActivation - new field
  + new IOCTL defined DSL_FIO_EVENT_ACTIVATION_CONTROL_SET
  * DSL_FIO_EVENT_STATUS_GET ioctl was moved to common section
  * update implementation
    - DSL_DRV_Open()
    - DSL_DRV_Release()
    - DSL_DRV_Write()
    - DSL_DRV_Ioctls()
    - DSL_DRV_Poll()
    - DSL_ModuleCleanup()
    - DSL_EventQueue()
    - DSL_EventUnqueue()
    - DSL_DriverHandleGet()
    - DSL_DriverHandleDelete()
    - DSL_Cleanup()
    - DSL_IoctlHandle(): DSL_FIO_EVENT_STATUS_GET

V3.0.0 - 2007-07-13
user interface definition change(s):
- Added 'nDirection' parameter within DSL_G997_LastStateTransmitted_t structure
common:
- Danube/Amazon-SE: Added support for DSL_FIO_G997_LAST_STATE_TRANSMITTED_GET
  ioctl (currently only supported for downstream direction by firmware)

V2.7.105 - 2007-07-06
user interface definition change(s):
- Changed definition of enum type 'DSL_TcLayerSelection_t' and
  'DSL_SystemInterfaceSelection_t'. Added unknown state which has value of zero
  (as default in case of missing information from firmware)
- Chip version will be returned by VersionInformationGet() function if supported
  by LowLevel Driver
bugfix(es):
- Danube/Amazon-SE (SMS00634782): SYSTEM_INTERFACE_STATUS event generated with
  unstable status information
- Danube/Amazon-SE (SMS00634445): PTM support for Danube and Amazon-SE
  Implemented extended firmware version check
  + firmware version will be ready only once after firmware download stored
    version will be used for later checks
  + mismatch of major version (device) and application (Annex) are detected
  Minimum Firmware version for using PTM functionality are
  Danube:    2.1.2.C.1.1 and later
  Amazon-SE: 3.1.0.5.1.1 and later
- Amazon-SE (SMS00635092): CMV to indicate Amazon-SE silicon
  Implemented handling to inform the firmware about the currently used chip
  version (A11 and A12 versions are handled by now)
- SMS00629769: acs 0 related problems
  + new line state defined: DSL_LINESTATE_NOT_UPDATED
  * DSL_AutobootHandleRestart() updated to use new state
- Danube/Amazon-SE:
  + Corrected configuration of GPIO for LEDs (ADSL Link status and ADSL Data
    LED)
common:
- PM module VINAX device specific implementation added
  + DSL_PM_DEV_ChannelCountersSet()
  + DSL_PM_DEV_DataPathCountersSet()
  + DSL_PM_DEV_LineSecCountersSet()
  + DSL_PM_DEV_LineInitCountersSet()
- code cleaning up
  - #if 0 removed
  - some comments removed
  - naming corrected
  - code line lengths corrected
- footprint optimization
  - DSL_CTX_READ macro optimized, nErrCode checking removed
  - DSL_CTX_WRITE macro optimized, nErrCode checking removed
  - DSL_CTX_READ() macro was replaced by DSL_CTX_READ_SCALAR() where it is possible
  - DSL_CTX_WRITE() macro was replaced by DSL_CTX_READ_SCALAR() where it is possible

V2.7.104 - 2007-07-03
bugfix(es):
- Vinax: Hot fix to avoid division by zero within function
  DSL_PM_HistoryItemIdxGet() if compiling without line counters/thresholds

V2.7.103 - 2007-06-29
common:
- Added possibility to compile with FlexeLint
- Used FlexeLint for code analysis and to fix reported issues

V2.7.102 - 2007-06-27
bugfix(es):
- Danube/Amazon-SE:
  + BugFix for crash in case of using TI based DSLAM
  + SMS00631512: g997smr & g997sms do not work - Corrected implementation for
    internal data handling and storing to FIFO
  + Corrected implementation to handle/request power management state
  + Configuration for activating interrupts (i.e. CEOC) will be written after
    each firmware download
common:
- Resource usage optimizations (code size and runtime memory)
  * firmware using chunks download support corrected
    + DSL_AutobootLoadFirmwareData_t structure updated: field bLastChunk added
    * implementation updated
      - DSL_AutobootLoadFirmware()
      - DSL_FwDownload()
      - DSL_DEV_FwDownload() for Danube and Vinax
  + PM module generic implementation added
    + DSL_PM_IsPmReady()
  + G997 common implementation added
    - new data types defined to store internally DELT parameters
  + VINAX G997 device specific implementation added
    - DELT implementation adapted according to the new data types
  + DANUBE G997 device specific implementation added
    - DELT implementation adapted according to the new data types
    - DELT group size parameter support implemented
    - dynamic memory allocation for DELT implementation
      - DSL_DANUBE_G997_LoopDiagnosticCompleted() updated
      - DSL_Cleanup() updated
- VINAX device specific implementation added
  + DSL_VNX_DumpMessage()
  + DSL_VNX_CheckMessageDumpBlackList()
  * DSL_VNX_ChRequestMessage(): add message dump functionality
- ADSL MIB module
  + implementation
    - DSL_MIB_ADSL_LineExtEntrySet()
    - DSL_MIB_ADSL_LineExtEntryGet()

V2.7.101 - 2007-06-20
bugfix(es):
- Danube/Amazon-SE: Correction of PM channel counter handling according to
  fast/interleaved selection in ADSL1 (polling update and restore in case of FW
  reboot)
- Danube/Amazon-SE: Correction for software check of reboot criteria
  (actual SNR margin against MinSNR margin)
- Danube/Amazon-SE
  + Correction of PM channel counter handling according to fast/interleaved
    selection in ADSL1 (polling update and restore in case of FW reboot)
  + Correction for software check of reboot criteria (actual SNR margin against
    MinSNR margin)
  + Corrected CMV handling for configuration of showtime event logging
  + Corrected showtime entry handling to inform low level driver with datarate
    also in case of ADSL1 (fast path)
  + Added implementation to handle G.992.2 (ADSL1 lite) both within CMV
    configuration as well as for status information
- Danube/Amazon-SE (SMS00624853): Corrected implementation to activate showtime
  event logging buffer
common:
- build scripts updated
  + support for DSL_CPE_STATIC_DELT_DATA added
  + support of OpenWrt for VINAX added
- DELT data dynamic memory allocation
  + new IOCTL DSL_FIO_G997_DELT_FREE_RESOURCES implemented
  * DSL_VNX_LoopDiagnosticCompleteHandle() - updated
  * DSL_DANUBE_G997_LoopDiagnosticCompleted() - updated
  * DSL_Cleanup() updated
- L3 power state implementation
  - DSL_AutobootHandleRestart() updated: the leaving from the L3 state
    check added for counters save call
  - DSL_DEV_ShowtimeStatusUpdate() updated: L3 power mode handling fixed
  - DSL_DEV_AutobootHandleL3() updated: L3 power mode handling fixed
  - DSL_DEV_G997_PowerManagementStateForcedTrigger() for Danube fixed
- bugfixes
  * DSL_DEV_ShowtimeStatusUpdate(): call to DSL_DANUBE_PowerStatusHandle() fixed
  * mutex application in the DELT functions added
    - DSL_DEV_G997_DeltHlinScaleGet() updated
    - DSL_DEV_G997_DeltHlinGet() updated
    - DSL_DEV_G997_DeltHlogGet() updated
    - DSL_DEV_G997_DeltQLNGet() updated
    - DSL_DEV_G997_DeltSNRGet() updated
- ADSL MIB module
  + implementation
    - DSL_MIB_ADSL_LineExtEntrySet()
    - DSL_MIB_ADSL_LineExtEntryGet()
    - DSL_MIB_ADSL_TrapsGet()
    - DSL_MIB_ADSL_ExtTrapsGet()
    - API support for ADSL MIB traps
      - new types defined: DSL_MIB_ADSL_Thresholds_t, DSL_MIB_ADSL_Context_t
      - drv_dsl_cpe_intern_mib.h added to main DSL CPE API internal header
      - new field MibAdslCtx added to DSL Context
      - line second traps implemented
        - DSL_PM_LineCountersThresholdsCrossingCheck() updated
      - line init traps implemented
        - DSL_PM_LineCountersThresholdsCrossingCheck() updated
      - data rate traps implemented
        - DSL_DANUBE_ChannelRateUpdate() updated
        - DSL_VNX_OnEventChannelDataRateThresholdCrossingUpdate() updated
  - DSL_MIB_ADSL_AlarmConfProfileExtEntrySet()
  - DSL_MIB_ADSL_AlarmConfProfileExtEntryGet()
- Danube/Amazon-SE: Added Low Level Driver call (DSL_FIO_BSP_FREE_RESOURCE) to
  free firmware resources after showtime entry and last codeswap has been
  finished

V2.7.100 - 2007-06-11
common:
- build scripts updated
  + new option INCLUDE_DSL_CPE_PM_OPTIONAL_PARAMETERS added
- autoboot thread reboot criteria check updated
  + new function DSL_DEV_ShowtimeRebootCheck() for Danube and VINAX implemented
  * DSL_AutobootHandleShowtime() updated
  + new enum defined DSL_DEV_RebootCheckResult_t
- DANUBE specific implementation
  + new implementation
    - DSL_DEV_G997_LineTransmissionStatusGet()
- ADSL MIB implementation
  + DSL_MIB_ADSL_LineAlarmConfProfileEntryGet() 
  + DSL_MIB_ADSL_LineAlarmDataRateGet()
  + DSL_MIB_ADSL_LineAlarmDataRateSet()
  + DSL_MIB_ADSL_LineAlarmConfProfileEntrySet()
  + DSL_MIB_ADSL_LineExtEntrySet()
  + DSL_MIB_ADSL_LineExtEntryGet()
  * handling of INCLUDE_DSL_CPE_PM_OPTIONAL_PARAMETERS compiler switch added

V2.7.1 - 2007-06-08
bugfix(es):
- LED module optimizations

V2.7.0 - 2007-06-06
user interface definition change(s):
- Added GroupSize parameter for the following DELT functions (currently not
  supported)
  + DSL_G997_DeltHlinGet
  + DSL_G997_DeltHlogGet
  + DSL_G997_DeltQLNGet
  + DSL_G997_DeltSNRGet
common:
- Amazon-SE: Included handling for ADSL Data LED
bugfix(es):
- Danube/Amazon-SE (SMS00622712): Corrected data rate reporting for ADSL1 in
  fast mode
- Amazon-SE (SMS00626081): Corrected firmware version check for decision whether
  the ATM/PTM selection is supported (Amazon-SE >= FS1 supports it)
- Corrected build of driver archive (lib_dsl_cpe_api.a) to include device
  specific functionality.
- Corrected handling for showtime SNR handling in ADSL1 mode (g997lsg)

V2.6.105 - 2007-06-01
common:
- comments added to dsl_cpe_api_intern.h
- _DSL_CTX_READ and _DSL_CTX_WRITE macros fixed
- DANUBE specific implementation
  + new implementation
    - DSL_DEV_G997_LineTransmissionStatusGet()
    - DSL_DEV_G997_LastStateTransmittedGet()
  * DSL_DEV_G997_SnrAllocationNscGet() fixed for US: the number of
    returned values corrected accordingly Annex type and current ADSL mode
- Footprint optimization
  - some comments added
  - pContext checks analyzed and removed
    - DSL_DANUBE_G997_ActPSD_Get()
    - DSL_DANUBE_PowerStatusSet()
    - DSL_DANUBE_PowerStatusHandle()
    - DSL_DANUBE_ModemReset()
    - DSL_DANUBE_ChannelRateUpdate()
    - DSL_DANUBE_HdlcStatusGet()
    - DSL_DANUBE_HdlcResolvedGet()
    - DSL_DANUBE_HdlcSend()
    - DSL_DANUBE_L3StatusGet()
- VINAX specific implementation
  + new implementation
    - DSL_VNX_ChReadMessage()
    - VDSL DELT FE/ADSL parameters support added
    - DSL_VNX_HandleMessage()
    - DSL_VNX_DeltFeUpdate
    - DSL_VNX_DeltArrayParamsQuery
    - DSL_VNX_AdslDeltAllDataGet()
    - DSL_VNX_DeltHlinGet()
  * DSL_DEV_G997_DeltHlogGet(): VDSL FE/ADSL parameters support added
  * DSL_DEV_G997_DeltQLNGet(): VDSL FE/ADSL parameters support added
  * DSL_DEV_G997_DeltSNRGet(): VDSL FE/ADSL parameters support added
  * DSL_VNX_SendMsgTestParamsAuxGet():
    function renamed to DSL_VNX_SendMsgTestParamsAuxUpdate()
  * DSL_VNX_DeltHlogGet(): moved to the "drv_dsl_cpe_device_vinax.c"
  * DSL_VNX_DeltHlinGet(): moved to the "drv_dsl_cpe_device_vinax.c"
  * DSL_VNX_DeltSnrGet(): moved to the "drv_dsl_cpe_device_vinax.c"
  * DSL_VNX_DeltQlnGet(): moved to the "drv_dsl_cpe_device_vinax.c"
  * DSL_VNX_G997_FramingParameterStatusVdsl1Get():
    moved to the "drv_dsl_cpe_device_vinax.c"
  * DSL_VNX_G997_FramingParameterStatusVdsl2Get():
    moved to the "drv_dsl_cpe_device_vinax.c"
  * DSL_VNX_G997_FramingParameterStatusAdslGet():
    moved to the "drv_dsl_cpe_device_vinax.c"

V2.6.104 - 2007-05-25
common:
- Danube specific implementation
- VINAX specific implementation
  - DSL_VNX_ModemRestart() removed
  - Duplicated NULL-pointer checks removed
  + new implementation
    - DSL_VNX_LoopDiagnosticCompleteHandle()
- G997 implementation
  + new implementation
    - DSL_G997_LineTransmissionStatusGet()
    - DSL_G997_LastStateTransmittedGet()
  + new device interface functions added
    - DSL_DEV_G997_LineTransmissionStatusGet()
    - DSL_DEV_G997_LastStateTransmittedGet()
- PM implementaion
  - bActivate flag check added to DSL_PM_BurninModeSet()
- Danube specific PM implementation
  * line state checks corrected

V2.6.103 - 2007-05-15
common:
- Updated license within file headers
- Removed configure option '--enable-adsl-latency'. To activate dual latency the
  new option '--with-channels-per-line' has to be used with a value of '2'

V2.6.102 - 2007-05-11
common:
- new ioctls added
  + DSL_FIO_PM_ELAPSED_TIME_RESET
  + DSL_FIO_PM_BURNIN_MODE_SET
  + DSL_FIO_PM_SYNC_MODE_SET
  + DSL_FIO_PM_RESET
  + DSL_FIO_PM_15MIN_ELAPSED_EXT_TRIGGER
  + DSL_FIO_EFM_MAC_CONFIG_SET
  + DSL_FIO_EFM_MAC_CONFIG_GET
- PM module implementation added
  + DSL_PM_Reset()
  + DSL_PM_ChannelCountersReset()
  + DSL_PM_LineCountersReset()
  + DSL_PM_DataPathCountersReset()
  + DSL_PM_15MinElapsedExtTrigger()
  + INCLUDE_DSL_CPE_PM_TOTAL_COUNTERS configuration added
  * DSL_PM_SyncTimeUpdate() : showtime interval trigger point changed
  * DSL_PM_ChannelCountersShowtimeGet() : implementation changed to
    support accumulated sum over the requested intervals
  * DSL_PM_DataPathCountersShowtimeGet() : implementation changed
    to support accumulated sum over the requested intervals
  * DSL_PM_LineSecCountersShowtimeGet() : implementation changed
    to support accumulated sum over the requested intervals
  * DSL_PM_LineInitCountersShowtimeGet() : implementation changed to
    support accumulated sum over the requested intervals
  * DSL_PM_ThreadNe() : processing sequence changed
- VINAX device specific implementation added
  + DSL_EfmMacConfigSet()
  + DSL_EfmMacConfigGet()
- common implementation added
  * DSL_AutobootFwWait() : FW request on timeout removed
- congiguration options changed
  * "--inc-dsl-pm-line-init-counters" renamed
    to "--inc-dsl-pm-line-counters"
  * "--inc-dsl-pm-line-init-thresholds" renamed
    to "--inc-dsl-pm-line-thresholds"
- test modes extended
  - implementation of DSL_TESTMODE_TRAINING_LOCK
  - implementation of DSL_TESTMODE_LOCK
bugfix(es):
- Common: PM module lock/unlock during FW reload fixed.
  PM mutex was unlocked twice and this caused the PM module
  to continue FW polling during reload procedure.
- issue within DSL_DANUBE_G997_DeltSNRGet() regarding correct SNR values
  boundary checking fixed
- DSL_DEV_G997_SnrAllocationNscGet() fixed for US
- DANUBE device specific implementation updated
  - superfluous semaphore unlock fixed

V2.6.101 - 2007-05-08
-

V2.6.100 - 2007-05-07
common:
- added configuration options for the following macros:
  - INCLUDE_DSL_CPE_PM_SHOWTIME_COUNTERS
  - INCLUDE_DSL_CPE_PM_HISTORY
  - INCLUDE_DSL_CPE_PM_TOTAL_COUNTERS
- ADSL MIB updated to fullfil latest changes of PM interface
- PM module generic implementation added
  * DSL_PM_SyncTimeUpdate() : change implementation to support Showtime counters
  * DSL_PM_HistoryUpdate() : change implementation to support Showtime counters
  * DSL_PM_ChannelCountersUpdate() : change implementation to support Showtime
    counters
  * DSL_PM_LineCountersUpdate() : change implementation to support Showtime
    counters
  * DSL_PM_DataPathCountersUpdate() : change implementation to support Showtime
    counters
  + DSL_PM_ChannelCountersShowtimeGet()
  + DSL_PM_LineSecCountersShowtimeGet()
  + DSL_PM_LineInitCountersShowtimeGet()
  + DSL_PM_DataPathCountersShowtimeGet()
bugfix(es):
- incorrect error printout conditions fixed in the PM counters get functions

V2.6.2 - 2007-05-07
bugfix(es):
- Danube/Amazon-SE: corrected low level driver specific include file within
  "drv_dsl_cpe_device_danube.h" to be build within kernel context

V2.6.1 - 2007-05-02
bugfix(es):
- Vinax: use default value (0) for DSL_DEV_VINAX_CPE_DEFAULT_LINE
  to allow standard builds without extra CFLAGS
- Amazon-SE: corrected low level driver specific include file within
  "drv_dsl_cpe_device_danube.h"

V2.6.0 - 2007-04-30
bugfix(es):
- fix MODULE_PARM for linux kernel 2.6
removed file(s):
- Danube: "drv_dsl_cpe_bsp_danube.h" definitions of low level driver interface
  shall be used from low level driver directly. Therefore the configure option
  '--enable-driver-include' has to be used to specify the appropriate path
common:
- Added configure option to building for Amazon-SE target
- Danube/Amazon-SE: Adaptations within low level driver interface requires
  minimum version of low level driver of V3.0.0 for Danube and V2.0.1 for
  Amazon-SE
- Implemented common handling for callback support of following features
  + Dying gasp
  + CEOC message received
  + Firmware reboot request
- Vinax: Removed preprocessor definition "DSL_DEV_VINAX_CPE_DEFAULT_LINE=1" from
  file drv_dsl_cpe_device_vinax.h". Shall be defined within additional CFLAGs
  for more flexibility
- change name from "nDebugLevel" to "debug_level" (common name for all drivers!)

V2.5.104 - 2007-04-28
common:
- autoboot state machine
  + new autoboot state added: DSL_AUTOBOOTSTATE_L3
  * DSL_AutobootHandleShowtime() updated to handle L3
  * DSL_AutobootStateCheck() updated - handling for DSL_AUTOBOOTSTATE_L3
    state added
- common implementation
  * DSL_SystemInterfaceConfigGet() - updated
  * DSL_SystemInterfaceConfigSet() - updated
  + DSL_SystemInterfaceStatusGet() - new function
  + new fields in the DSL Context structure
    - PowerManagementL3Forced
    - nFwUnavailableTime
  * DSL_BF_EfmTcConfig_t definition fixed
  * DSL_AutobootLoadFirmware() : implementation changed to allow FW download
    from any state
- device specific interface
  + new prototypes added
    - DSL_DEV_AutobootHandleL3()
    - DSL_DEV_SystemInterfaceConfigSet()
    - DSL_DEV_SystemInterfaceConfigGet()
    - DSL_DEV_SystemInterfaceStatusGet()
- new error codes defined:
  - DSL_ERR_L3_UNKNOWN_FAILURE
  - DSL_ERR_L3_NOT_IN_L0
  - DSL_ERR_L3_TIMED_OUT
  - DSL_ERR_L3_REJECTED
- Danube specific implementation
  + System Interface Configuration added to device context data
  + new fields in the Danube specific data added: sysCIF, sysCIFSts
  + DSL_LX_TO_L3_ATTEMPT_COUNT definition added
  * header file drv_dsl_cpe_device_danube.h corrected
    - guard brakets corrected
  * DSL_DANUBE_LineFailuresUpdate(): L3 state check added, ADSL1 support added
  + new CMVs added:
    - addresses:
        - DSL_CMV_ADDRESS_INFO_DS_BIT_LOAD_FIRST
        - DSL_CMV_ADDRESS_INFO_DS_BIT_LOAD_LAST
        - DSL_CMV_ADDRESS_INFO_EXCESS_MARGIN
        - DSL_CMV_ADDRESS_STAT_L3_REQUEST
        - DSL_CMV_ADDRESS_STAT_L3_FAILURE_REASON
        - DSL_CMV_ADDRESS_RATE_DATA_NFEC_US_LP1
        - DSL_CMV_ADDRESS_RATE_DATA_NFEC_US_LP0
        - DSL_CMV_ADDRESS_RATE_DATA_NFEC_DS_LP1
        - DSL_CMV_ADDRESS_RATE_DATA_NFEC_DS_LP0
        - DSL_CMV_ADDRESS_CNTL_L3_REQUEST
        - DSL_CMV_ADDRESS_INFO_SYSTEM_INTERFACE
    - new indices
        - DSL_CMV_PMD_INDEX_NOMINAL_PSD_US
        - DSL_CMV_SYSTEM_INTERFACE_INDEX_CONFIG
        - DSL_CMV_SYSTEM_INTERFACE_INDEX_STATUS
  + new implementation
    - DSL_DEV_AutobootHandleL3()
    - DSL_DEV_G997_PowerManagementStateForcedTrigger
  + PTM/ATM support
    - DSL_DANUBE_VersionFS2Check()
    - DSL_DANUBE_SystemInterfaceStatusUpdate()
    - DSL_DANUBE_SystemInterfaceConfigCheck() - new function
    - DSL_DANUBE_VersionFS2Check() - new function
    - DSL_DEV_SystemInterfaceConfigSet() - new function
    - DSL_DEV_SystemInterfaceConfigGet() - new function
    - DSL_DEV_SystemInterfaceStatusGet() - new function
    - DSL_DEV_AutobootHandleStart() updated
    - DSL_DEV_AutobootHandleTraining() updated for PTM
    - DSL_DEV_DeviceInit() updated for PTM
- VINAX G997 device specific implementation added
   +  DSL_DEV_G997_PowerManagementStateForcedTrigger()
- VINAX device specific implementation added
   * DSL_VNX_SendMsgHsToneGroupSet() : implementation synchronized to
     the latest changes in the DSL API (CO)
   * DSL_VNX_SendMsgBearerChSet() : implementation synchronized to the
     latest changes in the DSL API (CO)
   * DSL_DEV_LowLevelConfigurationSet() : implementation synchronized
     to the latest changes in the DSL API (CO)
   * DSL_VNX_SendMsgAlgorithmControl() : implementation synchronized to
     the latest changes in the DSL API (CO)
   * DSL_VNX_SendMsgDigitalFilter() : add new (POTS_3) digital filter support
   * DSL_VNX_SendMsgHybridSelect() : add new (F1_998E17_U0) hybrid support
   + DSL_DEV_AutobootHandleL3() function implementation
- PM module implementation added
   + DSL_PM_HistoryDelete()
   + DSL_PM_ChannelCountersReset() : partly implemented
   + DSL_PM_LineCountersReset() : partly implemented
   + DSL_PM_DataPathCountersReset() : partly implemented
   * bPmLock flag check added to all PM API functions to avoid
     access during PM Lock
   * Elapsed time for PM total counters now starting at zero on
     startup of DSL CPE API independently of the PM_SYNC_MODE
bugfix(es):
- Danube specific implementation
  - DSL_DANUBE_G997_ActPSD_Get() - new algorithm implemented
  - DSL_DEV_G997_FramingParameterStatusGet() updated:
    - nFEC getting implemented
    - nINTLVBLOCK is always set to 0
  - DSL_DANUBE_G997_DeltSNRGet() updated: invalid values corrected

V2.5.103 - 2007-04-20
common:
- Linux OS part: module parameter for initial debug levels definition
  added
- New IOCTLs implemented
  + DSL_FIO_G997_POWER_MANAGEMENT_STATE_FORCED_TRIGGER
  + DSL_FIO_G997_POWER_MANAGEMENT_STATUS_GET
- G997 common implementation added
  + DSL_G997_PowerManagementStateForcedTrigger()
  + DSL_G997_PowerManagementStatusGet()
- DANUBE device specific implementation updated and fixed
  * DSL_PM_DEV_ChannelCountersGet() fixed to return right values
  * DSL_PM_DEV_DataPathCountersGet() fixed to return right values
  * DSL_PM_DEV_LineSecCountersGet() fixed to return right values,
    set nLOFS to zero
  * DSL_DANUBE_LineFailuresUpdate() is fixed
  * DSL_DANUBE_G997_DeltSNRGet() is fixed
- VINAX device specific implementation added
  + VINAX Automode Control
  + DSL_VNX_CamFsmStateSet()
  + DSL_VNX_CamFsmStateGet()
  + DSL_VNX_CamFsmEnable()
  + DSL_VNX_CamFwLoadNeededCheck()
  + DSL_VNX_CamExceptionHandle()
  + DSL_VNX_SendMsgSpar1Get()
  + DSL_DEV_FramingParametersStatusGet()
  + DSL_VNX_FramingParametersVdsl2StatusGet()
  + DSL_VNX_FramingParametersAdslStatusGet()
  + VINAX Power Management States handling
  + DSL_DEV_G997_PowerManagementStateForcedTrigger()
  + DSL_VNX_PowerManagementStatusSet()
  + "DSL_EVENT_S_LINE_POWERMANAGEMENT_STATE" event handling
- New fields in the DSL CPE Context
  + bSEM_PowerMgmtState
  + powerMgmtStatus

V2.5.102 - 2007-04-19
user interface definition change(s):
- Added ioctls for TR-98 counters (currently only dummy implementation which
  returns fixed values!)
  + DSL_FIO_PM_LINE_SEC_COUNTERS_SHOWTIME_GET
  + DSL_FIO_PM_LINE_INIT_COUNTERS_SHOWTIME_GET
  + DSL_FIO_PM_CHANNEL_COUNTERS_SHOWTIME_GET
  + DSL_FIO_PM_DATA_PATH_COUNTERS_SHOWTIME_GET
- Added ioctl for getting the system interface status
  + DSL_FIO_SYSTEM_INTERFACE_STATUS_GET
- Extended ioctls for configuration/status of TPS TC configuration options
  + DSL_FIO_SYSTEM_INTERFACE_CONFIG_SET
  + DSL_FIO_SYSTEM_INTERFACE_CONFIG_GET
bugfix(es):
- Fix adaption for linux kernel 2.6 (tested against 2.6.19)
- Fix ioctl definition for DSL_FIO_G997_GAIN_ALLOCATION_NSC_GET,
  DSL_FIO_G997_GAIN_ALLOCATION_NSC_GET and DSL_FIO_G997_DELT_HLOG_GET
  (structure too big for VDSL2)
- small fixes for gcc 4.x-compatibility

V2.5.101 - 2007-04-13
documentation:
- new file doc/api/org_fig/autoboot_sm.vsd - autoboot state machine figure
bugfix(es):
- DSL_DANUBE_G997_DeltHlinGet() fixed data elements number
- DSL_DANUBE_G997_DeltQLNGet() fixed
- new semaphore for initialization critical section
  added (DSL_Context_t.initMutex), DSL_ModulesInit() fixed to use this semaphore
- DSL_AutobootControlSet() is updated to use DSL_ModulesInit(),
  Autoboot start conditions is applied
- update DSL_LINESTATE_LOOPDIAGNOSTIC_COMPLETE state handling
  in the Danube part to read current ADSL mode
- Fix "DELT timeout" issue. In the selected DELT mode the Autoboot timeout
  is set to 360 sec, otherwise - to 120 sec
- Cross check all available DELT data
- Fix "pmlsc15mg, pmlsc1dg" issue.
  PM module generic implementation corrected
- Fix "nUAS down counting" issue.
  PM module generic implementation corrected
- Fix "Channel counters" issue for the VINAX device. All channel counters
  checked
- Fix "LOS/LOF polling" issue for the VINAX device. LOS/LOF bits
  are successfully updated and reported by events
- Fix "Autoboot Control Set" issue for the VINAX device. Implementation
  corrected
- DSL_DEV_FwDownload() (Danube) updated
- functionality to restart autoboot from the API error is added
common:
- refactoring
  * DSL_ModemReset() renamed to DSL_LinkReset()
  * DSL_DEV_ModemReset() renamed to DSL_DEV_LinkReset()
- DSL_DANUBE_ChannelStatusUpdate() is now global
- CEOC module implementation added
  * CEOC context pointer check modified in the CEOC API functions
- PM module implementation added
  + DSL_PM_Restart()
  * PM context pointer check modified in all PM API functions
- VINAX device specific implementation added
   *  DSL_DEV_ModemReset() renamed to DSL_DEV_LinkReset()
- Align all debug printouts
- Added autoboout functionality to initialize DSL CPE API without
  specified FW
- Danube part G997 implementation
  + new function DSL_DEV_G997_FramingParameterStatusGet()
  + new CMVs
    - DSL_CMV_ADDRESS_CNFG_DATA_NFEC_US
    - DSL_CMV_ADDRESS_CNFG_DATA_NFEC_DS
    - DSL_CMV_ADDRESS_CNFG_DATA_INTLVBLOCK_US
    - DSL_CMV_ADDRESS_CNFG_DATA_INTLVBLOCK_DS
    - DSL_CMV_ADDRESS_CNFG_DATA_INTLVDEPTH_US
    - DSL_CMV_ADDRESS_CNFG_DATA_INTLVDEPTH_DS
- Danube part implementation
  + new functions
    - DSL_DANUBE_LineInventoryNeRead()
    - DSL_DANUBE_LineInventoryFeRead()
  * DSL_DANUBE_OnLineInventoryFe() updated
  * DSL_DEV_G997_LineInventoryGet() - reimplementation
  + new modem control definition
    - DSL_CMV_ADDRESS_ARG_CNTL_MODEM_STOP
  - Danube CEOC module
    - new function DSL_EventCB()
    - new style event callback DSL_NewStyle_EventCB()
    - DSL_DEV_DriverHandleGet() and DSL_DEV_DriverHandleDelete()
      updated for new style callbacks
    - DSL_DEV_AutobootHandleStart() updated
  * refactoring
    - DSL_CMV_ADDRESS_INFO_NE_VENDORID_G994_FE renamed to
      DSL_CMV_ADDRESS_INFO_VENDORID_G994_FE
    - DSL_CMV_ADDRESS_INFO_NE_VENDORID_G994_NE renamed to
      DSL_CMV_ADDRESS_INFO_VENDORID_G994_NE
  + new CMVs added
    - DSL_CMV_ADDRESS_INFO_REBOOT_INT_CONFIG
    - DSL_CMV_ADDRESS_INFO_REBOOT_INT_INFO
    - DSL_CMV_ADDRESS_OPTN_UTOPIA_ADDRESS
    - DSL_CMV_ADDRESS_CNFG_DATA_RATEUS_FLAG_ADSL2_MSGLp
    - DSL_CMV_ADDRESS_CNFG_DATA_RATEUS_FLAG_ADSL2_MSGc
    - DSL_CMV_ADDRESS_CNFG_DATA_RATEDS_FLAG_ADSL2_MSGLp
    - DSL_CMV_ADDRESS_CNFG_DATA_RATEDS_FLAG_ADSL2_MSGc

V2.5.100 - 2007-04-09
bugfix(es):
- Corrected function call in case of using ioctl
  DSL_FIO_G997_GAIN_ALLOCATION_NSC_GET which returned SNR values before
- PM module history statistics nPrevIvs initialization value corrected
- PM module "ElapsedTime" issue
- "Actual Impulse Noise Protection" cross check with DSL API (CO), correct
  equations
- Fix "sics"/"sicg" issue. Incorrect CLI commands caused the unwanted behaviour.
  Implementation corrected
- Fix LATN,SATN issue. Zero values are reported by the VINAX FW. This issue
  needs further clarification from the FW point of view
- Fix PM module history interval shift issue. b15minElapsedFlag and
  b1dayElapsedFlag were not reseted
- Fix PM module History Intervals issue. Implementation corrected
- Fix "DELT timeout" issue, autoboot timeout set to 360 sec in case of activated
  DELT
- Fix "pmlsc15mg, pmlsc1dg" issue, implementation corrected
- Fix "nUAS down counting" issue, implementation corrected
- rearrange of DSL_DBG_ERR/DSL_DBG_MSG usage in the Danube part
- Incorrect channel range printout issue fixed
- '\n' is replaced by DSL_CRLF
- '\r\n' is replaced by DSL_CRLF
- function entrance/leaving debug printouts updated
new features (G.997.1):
- DSL_G997_FramingParametersStatusGet()
common:
- DANUBE device specific implementation updated
  * DSL_DEV_AutobootHandleStart(): NE inventory handling
  * DSL_DANUBE_OnLineInventoryFe()
  * DSL_DEV_G997_LineInventoryGet() - reimplementation
- DANUBE device specific implementation added
  + new CMVs added
    - DSL_CMV_ADDRESS_INFO_REBOOT_INT_CONFIG
    - DSL_CMV_ADDRESS_INFO_REBOOT_INT_INFO
    - DSL_CMV_ADDRESS_OPTN_UTOPIA_ADDRESS
    - DSL_CMV_ADDRESS_CNFG_DATA_RATEUS_FLAG_ADSL2_MSGLp
    - DSL_CMV_ADDRESS_CNFG_DATA_RATEUS_FLAG_ADSL2_MSGc
    - DSL_CMV_ADDRESS_CNFG_DATA_RATEDS_FLAG_ADSL2_MSGLp
    - DSL_CMV_ADDRESS_CNFG_DATA_RATEDS_FLAG_ADSL2_MSGc
  + DSL_DEV_FramingParameterStatusGet()
  + DSL_DEV_UtopiaAddressConfigGet()
  + DSL_DEV_UtopiaAddressConfigSet()
  + DSL_DANUBE_LineInventoryNeRead()
  + DSL_DANUBE_LineInventoryFeRead()
  + CEOC Module:
    - new functions:
      - DSL_EventCB()
      - DSL_NewStyle_EventCB()
- VINAX device specific implementation added
  + DSL_LowLevelConfigurationSet()
  + DSL_LowLevelConfigurationGet()
  + DSL_DEV_LowLevelConfigurationSet()
  + DSL_DEV_G997_FramingParametersStatusGet()
  + DSL_VNX_G997_FramingParametersStatusVdsl1Get()
  + DSL_VNX_G997_FramingParametersStatusVdsl2Get()
  + DSL_VNX_G997_FramingParametersStatusAdslGet()
- New IOCTLs implemented
  + DSL_FIO_LOW_LEVEL_CONFIGURATION_SET
  + DSL_FIO_LOW_LEVEL_CONFIGURATION_GET
  + DSL_FIO_G997_FRAMING_PARAMETERS_STATUS_GET
  + DSL_FIO_FRAMING_PARAMETER_STATUS_GET
- New interface function
  + DSL_FramingParameterStatusGet()
- refactoring
  - DSL_DEBUG removed, DSL_DEBUG_NOLINE renamed to DSL_DEBUG
  - DSL_CMV_ADDRESS_INFO_NE_VENDORID_G994_FE renamed to
    DSL_CMV_ADDRESS_INFO_VENDORID_G994_FE
  - DSL_CMV_ADDRESS_INFO_NE_VENDORID_G994_NE renamed to
    DSL_CMV_ADDRESS_INFO_VENDORID_G994_NE

V2.5.0 - 2007-03-30
bugfix(es):
- Danube: Fixed segmentation fault in case of requesting DELT data
- Do not copy data to/from context in case of size mismatch!

V2.4.5 - 2007-03-29
- VINAX SAR device specific implementation added
  + DSL_SAR_VNX_SegmentationCountersGet()
  + DSL_SAR_VNX_ReassemblyCountersGet()
- New IOCTLs implemented
  + DSL_FIO_SAR_CONFIG_SET
  + DSL_FIO_SAR_CONFIG_GET
  + DSL_FIO_SAR_SEGMENTATION_TABLE_SET
  + DSL_FIO_SAR_SEGMENTATION_TABLE_GET
  + DSL_FIO_SAR_REASSEMBLY_TABLE_SET
  + DSL_FIO_SAR_REASSEMBLY_TABLE_GET
  + DSL_FIO_SAR_SEGMENTATION_COUNTERS_GET
  + DSL_FIO_SAR_REASSEMBLY_COUNTERS_GET
  + DSL_FIO_G997_LINE_INIT_STATUS_GET
  + DSL_FIO_SYSTEM_INTERFACE_CONFIG_SET
  + DSL_FIO_SYSTEM_INTERFACE_CONFIG_GET
  + DSL_FIO_BAND_PLAN_SUPPORT_GET
  + DSL_FIO_BAND_PLAN_STATUS_GET
  + DSL_FIO_UTOPIA_ADDRESS_CONFIG_SET
  + DSL_FIO_UTOPIA_ADDRESS_CONFIG_GET
- Common implementation
  + DSL_SystemInterfaceConfigSet()
  + DSL_SystemInterfaceConfigGet()
  + DSL_SAR_ConfigSet()
  + DSL_SAR_ConfigGet()
  + DSL_SAR_SegmentationTableSet()
  + DSL_SAR_SegmentationTableGet()
  + DSL_SAR_ReassemblyTableSet()
  + DSL_SAR_ReassemblyTableGet()
  + DSL_SAR_SegmentationCountersGet()
  + DSL_SAR_ReassemblyCountersGet()
  + DSL_BandPlanStatusGet()
  + DSL_BandPlanSupportGet()
  + DSL_UtopiaAddressConfigSet()
  + DSL_UtopiaAddressConfigGet()
- New fields in the DSL Context
  + lineInitRetryCount
- ADSL MIB module
  + implementation
    - DSL_MIB_ADSL_ChanPerfDataEntryGet()
    - DSL_MIB_ADSL_ChanIntervalEntryGet()
    - DSL_MIB_ADSL_IntervalExtEntryGet()
    - DSL_MIB_ADSL_PerfDataExtEntryGet()
- new OS layer definitions:
  - DSL_OS_ModUseCountIncrement()
  - DSL_OS_ModUseCountDecrement()
- G997 implementation
  - new structure DSL_G997_DeltData_t to store all DELT data
- G997 Danube specific implementation
  - DELT redesign
    - new field DELT in the DSL_Context structure
    - new functions
      - DSL_DANUBE_G997_LoopDiagnosticCompleted()
      - DSL_DANUBE_G997_DeltHlinScaleGet()
      - DSL_DANUBE_G997_DeltHlinGet()
      - DSL_DANUBE_G997_DeltHlogGet
      - DSL_DANUBE_G997_DeltQLNGet()
      - DSL_DANUBE_G997_DeltSNRGet()
    - DELT interface functions was updated to read all data from DSL Context

V2.4.4.1 - 2007-03-27
- ADSL MIB module
  + implementation
    - DSL_MIB_ADSL_PerfDataEntryGet()
    - DSL_MIB_ADSL_IntervalEntryGet()
- Clear EOC module DANUBE device specific implementation
  + implementation
    - DSL_CEOC_DEV_MessageSend()
    - DSL_CEOC_DANUBE_DataRead()
    - DSL_CEOC_DANUBE_MessageReceive()
    - DSL_CEOC_DEV_MessageReceive()

V2.4.4 - 2007-03-23
- update common implementation
  - Line state changed event generation is moved
    from DSL_LineStateUpdate() to DSL_LineStateSet()
- autoboot thread updates
  - DSL_AutobootThreadInit() is updated to set
    DSL_LINESTATE_NOT_INITIALIZED only once
  - line state setting is updated in the autoboot thread
  - link loss detection issue fixed
- Device specific interface
  - DSL_DEV_CEOC_FirmwareInit() removed
- G997 implementation (common and device specific) for
  the DSL_G997_LineInventoryGet/Set() corrected. All inventory data stored in
  the DSL Context
- new fields in the DSL Context:
  + lineInventoryNe
  + lineInventoryFe
  * nRestartTime removed
  + nLPath
-New IOCTLs implemented
  + DSL_FIO_G997_SNMP_MESSAGE_SEND
  + DSL_FIO_G997_SNMP_MESSAGE_RECEIVE
- G997 generic implementation added
  + DSL_G997_SnmpMessageSend()
  + DSL_G997_SnmpMessageReceive()
- PM module generic implementation
  + UAS specific handling added
- Clear ECO module generic implementation added
  + DSL_CEOC_Start()
  + DSL_CEOC_Stop()
  + DSL_CEOC_Restart()
  + DSL_CEOC_Thread()
  + DSL_CEOC_MessageSend()
  + DSL_CEOC_MessageReceive()
  + DSL_CEOC_SnmpMessageRead()
  + DSL_CEOC_SnmpMessageWrite()
  + DSL_CEOC_MessageRead()
  + DSL_CEOC_MessageWrite()
  + DSL_CEOC_CallbackHandle()
  + DSL_CEOC_InternalDevOpen()
  + DSL_CEOC_InternalDevClose()
  + DSL_CEOC_InternalMessageSend()
  + DSL_CEOC_InternalCbRegister()
- Clear EOC module VINAX device specific implementation added
  + DSL_CEOC_DEV_Start()
  + DSL_CEOC_DEV_Stop()
  + DSL_CEOC_DEV_Restart()
  + DSL_CEOC_DEV_MessageSend()
  + DSL_CEOC_DEV_MessageReceive()
- Clear EOC module DANUBE device specific implementation added
  + DSL_CEOC_EventCB()
  + DSL_DANUBE_CEOC_FirmwareInit()
  + DSL_CEOC_DEV_Start()
  + DSL_CEOC_DEV_Stop()
  + DSL_CEOC_DEV_Restart()
  + DSL_CEOC_DEV_MessageSend()
  + DSL_CEOC_DEV_MessageReceive()
  + new fields in the device specific data structure: CeocWaitQueue, bCeocRx
- VINAX device specific implementation added
  + DSL_VNX_PollDrvForModemResetState()
  * DSL_DEV_AutobootHandleStart(): Modem State polling added
- DANUBE device specific implementation added
  + DSL_DANUBE_ChannelStatusUpdate()
  * DSL_DEV_G997_LineInventorySet() is renamed to DSL_DANUBE_LineInventoryWrite()
- New files added
  + ceoc/drv_dsl_cpe_intern_ceoc.c
  + include/drv_dsl_cpe_api_ceoc_intern.h

V2.4.3.1 - 2007-03-20
common:
- ADSL MIB module
  + implementation
    - DSL_MIB_ADSL_PhysEntryGet()
  + initial implementation
    - DSL_MIB_ADSL_ChanIntervalEntryGet()
    - DSL_MIB_ADSL_LineAlarmConfProfileEntryGet()
    - DSL_MIB_ADSL_LineAlarmConfProfileEntrySet()
    - DSL_MIB_ADSL_TrapsGet()
    - DSL_MIB_ADSL_LineExtEntryGet()
    - DSL_MIB_ADSL_LineExtEntrySet()
    - DSL_MIB_ADSL_PerfDataExtEntryGet()
    - DSL_MIB_ADSL_IntervalExtEntryGet()
    - DSL_MIB_ADSL_AlarmConfProfileExtEntryGet()
    - DSL_MIB_ADSL_AlarmConfProfileExtEntrySet()
    - DSL_MIB_ADSL_ExtTrapsGet()
    - DSL_MIB_ADSL_AtucChanIntervalEntryGet()
    - DSL_MIB_ADSL_AturChanIntervalEntryGet()
    - DSL_MIB_ADSL_AtucPerfDataExtEntryGet()
    - DSL_MIB_ADSL_AturPerfDataExtEntryGet()
    - DSL_MIB_ADSL_AtucIntervalExtEntryGet()
    - DSL_MIB_ADSL_AturIntervalExtEntryGet()

V2.4.3 - 2007-03-16
bugfix(es):
- Corrected usage of data structures in function 'DSL_G997_LineInventorySet' for
  saving NE inventory data within context structure of DSL CPE API
- Danube: Corrected calculation of following values within context of
  DSL_FIO_G997_CHANNEL_STATUS_GET ioctl
  + ActualInterleaveDelay
  + ActualImpulseNoiseProtection
common:
- Refactoring
  - INCLUDE_ADSL_XXX renamed to INCLUDE_DSL_XXX
- new files: ceoc/drv_dsl_cpe_danube_ceoc.c, ceoc/drv_dsl_cpe_vinax_ceoc.c,
  mib/drv_dsl_cpe_adslmib.c, include/drv_dsl_cpe_api_ceoc.h,
  include/drv_dsl_cpe_device_ceoc.h
- file common/drv_dsl_cpe_mib.c removed
- update build scripts for new and removed files
- PM module redesigned according to the new FE handling requirements
- VINAX device specific DELT implementation moved to g997/drv_dsl_cpe_vinax.c
- new error code defined: DSL_ERR_CEOC_TX_ERR
- implementation
  + DSL_AutobootStatusGet()
  + DSL_AutobootStatusSet()
- fix current issues (Danube part)
  - issues regarding adsl2/2+ differences
    * DSL_DEV_G997_DeltHlinGet()
    * DSL_DEV_G997_DeltHlogGet()
  - DSL_TestModeControlSet() is fixed
  - Issue in the event FIFO initialization that leads to data corruption is fixed
  - initialization of bLoopDiagnosticsCompleted flag is moved
    to DSL_AutobootThreadStart()
- G997 for Danube implementation
  + DSL_DEV_G997_DeltQLNGet()
  + DSL_DEV_G997_DeltSnrGet()
  + New CMV addresses defined:
    - DSL_CMV_ADDRESS_INFO_DELT_SNR_PS_DS
    - DSL_CMV_ADDRESS_INFO_DELT_QLN_PS_DS
    - DSL_CMV_ADDRESS_INFO_DELT_QLN_PS_US
    - DSL_CMV_ADDRESS_INFO_DELT_SNR_PS_US
- DSL_IoctlHandlerHelperFunc_t definition is moved to header
- DSL_IoctHandlerHelperType definition is moved to header
- ADSL MIB module
  - build system and file structure
    - drv_dsl_cpe_mib.c is removed
    - drv_dsl_cpe_adslmib.c is added
    - build system is changed to conform ADSL MIB
      - drv_dsl_cpe_adslmib.c, drv_dsl_cpe_api_adslmib.h
        drv_dsl_cpe_api_adslmib_ioctl.h is added to scripts
      - drv_dsl_cpe_mib.c is removed from scripts
  - sceletons of DSL_DBG_ADSL_IoctlName(), DSL_MIB_ModuleInit()
  + implementation
    - DSL_MIB_IoctlHandle()
    - DSL_MIB_ADSL_AtucPhysEntryGet()
    - DSL_MIB_ADSL_AturPhysEntryGet()
    - DSL_MIB_ADSL_AtucChanEntryGet()
    - DSL_MIB_ADSL_AturChanEntryGet()
    - DSL_MIB_ADSL_AtucPerfDataEntryGet()
    - DSL_MIB_ADSL_AturPerfDataEntryGet()
    - DSL_MIB_ADSL_AtucIntervalEntryGet()
    - DSL_MIB_ADSL_AturIntervalEntryGet()
    - DSL_MIB_ADSL_AtucChanPerfDataEntryGet()
    - DSL_MIB_ADSL_AturChanPerfDataEntryGet()
  + initial implementation
    - DSL_MIB_ADSL_PhysEntryGet()
    - DSL_MIB_ADSL_ChanEntryGet()
    - DSL_MIB_ADSL_PerfDataEntryGet()
    - DSL_MIB_ADSL_IntervalEntryGet()
    - DSL_MIB_ADSL_ChanPerfDataEntryGet()
- Redesign of autoboot thread to fullfil new requirements

V2.4.2.1 - 2007-03-13
- DANUBE device specific implementation
  + new CMV address definitions:
    - DSL_CMV_ADDRESS_INFO_DELT_SNR_PS_DS
    - DSL_CMV_ADDRESS_INFO_DELT_QLN_PS_DS
    - DSL_CMV_ADDRESS_INFO_DELT_QLN_PS_US
    - DSL_CMV_ADDRESS_INFO_DELT_SNR_PS_US

V2.4.2 - 2007-03-09
- build scripts
  + configuration parameters names is rearranged
- IOCTL
  + DSL_FIO_G997_DELT_HLIN_GET
  + DSL_FIO_G997_DELT_HLIN_SCALE_GET
  + DSL_FIO_G997_DELT_HLOG_GET
  + DSL_FIO_G997_DELT_SNR_GET
  + DSL_FIO_AUX_LINE_INVENTORYGET
  + DSL_FIO_PM_CHANNEL_COUNTERS_15MIN_GET
  + DSL_FIO_PM_CHANNEL_COUNTERS_1DAY_GET
  + DSL_FIO_PM_CHANNEL_HISTORY_STATS_15MIN_GET
  + DSL_FIO_PM_CHANNEL_HISTORY_STATS_1DAY_GET
  + DSL_FIO_PM_CHANNEL_THRESHOLDS_15MIN_SET
  + DSL_FIO_PM_CHANNEL_THRESHOLDS_1DAY_SET
  + DSL_FIO_PM_CHANNEL_THRESHOLDS_15MIN_GET
  + DSL_FIO_PM_CHANNEL_THRESHOLDS_1DAY_GET
  + DSL_FIO_PM_DATA_PATH_COUNTERS_15MIN_GET
  + DSL_FIO_PM_DATA_PATH_COUNTERS_1DAY_GET
  + DSL_FIO_PM_DATA_PATH_HISTORY_STATS_15MIN_GET
  + DSL_FIO_PM_DATA_PATH_HISTORY_STATS_1DAY_GET
  + DSL_FIO_PM_DATA_PATH_THRESHOLDS_15MIN_SET
  + DSL_FIO_PM_DATA_PATH_THRESHOLDS_1DAY_SET
  + DSL_FIO_PM_DATA_PATH_THRESHOLDS_15MIN_GET
  + DSL_FIO_PM_DATA_PATH_THRESHOLDS_1DAY_GET
  + DSL_FIO_PM_LINE_SEC_HISTORY_STATS_15MIN_GET
  + DSL_FIO_PM_LINE_SEC_HISTORY_STATS_1DAY_GET
  + DSL_FIO_PM_LINE_SEC_THRESHOLDS_15MIN_SET
  + DSL_FIO_PM_LINE_SEC_THRESHOLDS_1DAY_SET
  + DSL_FIO_PM_LINE_SEC_THRESHOLDS_15MIN_GET
  + DSL_FIO_PM_LINE_SEC_THRESHOLDS_1DAY_GET
  + DSL_FIO_PM_LINE_SEC_COUNTERS_15MIN_GET
  + DSL_FIO_PM_LINE_SEC_COUNTERS_1DAY_GET
  + DSL_FIO_PM_LINE_SEC_COUNTERS_TOTAL_GET
  + DSL_FIO_PM_LINE_INIT_COUNTERS_15MIN_GET
  + DSL_FIO_PM_LINE_INIT_COUNTERS_1DAY_GET
  + DSL_FIO_PM_LINE_INIT_COUNTERS_TOTAL_GET
  + DSL_FIO_PM_LINE_INIT_HISTORY_STATS_15MIN_GET
  + DSL_FIO_PM_LINE_INIT_HISTORY_STATS_1DAY_GET
  + DSL_FIO_PM_LINE_INIT_THRESHOLDS_15MIN_SET
  + DSL_FIO_PM_LINE_INIT_THRESHOLDS_1DAY_SET
  + DSL_FIO_PM_LINE_INIT_THRESHOLDS_15MIN_GET
  + DSL_FIO_PM_LINE_INIT_THRESHOLDS_1DAY_GET
- common implementation
  + DSL_AuxLineInventoryGet()
  + Event handling added: DSL_EVENT_I_CHANNEL_THRESHOLD_CROSSING
  + Event handling added: DSL_EVENT_I_LINE_THRESHOLD_CROSSING
  + Event handling added: DSL_EVENT_I_DATA_PATH_THRESHOLD_CROSSING
  + check for the first start before PM counters restore added
- VINAX device specific implementation added
  + DSL_DEV_AuxLineInventoryGet()
  + DSL_VNX_InventorySet() : Aux Inventory support added
- DANUBE device specific implementation
  + Added internal function (DSL_DANUBE_CmvCheckPrint) to filter special CMVs to
    apply different debug levels for including (>= DSL_DBG_MSG) and excuding
    (<= DSL_DBG_WRN) periodically polled CMVs
  + CMV read only displays 'DSL[rx]' debug output
  + DSL_PM_DEV_LineSecCountersSet()
  + DSL_PM_DEV_LineInitCountersGet() fixed
  + new CMV address definitions:
    - DSL_CMV_ADDRESS_INFO_DELT_PREV_STATS_DS
    - DSL_CMV_ADDRESS_INFO_DELT_PREV_STATS_US
    - DSL_CMV_ADDRESS_INFO_DELT_HLOG_PS_DS
    - DSL_CMV_ADDRESS_INFO_DELT_HLOG_PS_US
    - DSL_CMV_ADDRESS_INFO_DELT_MT_DS
    - DSL_CMV_ADDRESS_INFO_DELT_MT_US
  + new CMV index definitions for DSL_CMV_ADDRESS_INFO_DELT_PREV_STATS_DS/US
    - DSL_CMV_DELT_PREV_STATS_INDEX_HLIN_SC
  + new CMV index definitions for DSL_CMV_ADDRESS_INFO_DELT_MT_DS/US
    - DSL_CMV_DELT_INDEX_MT_HLOG
    - DSL_CMV_DELT_INDEX_MT_QLN
    - DSL_CMV_DELT_INDEX_MT_SNR
  + DSL_DEV_G997_DeltHlinGet()
  + DSL_DEV_G997_DeltHlinScaleGet()
  + DSL_DEV_G997_DeltHlogGet()
- PM module implementation added
   + added bInit flag in the PM Context checking
   * PM Context mutex locking/unlocking calls was moved to history functions
   + DSL_PM_ChannelThresholdsUpdate()
   + DSL_PM_LineInitThresholdsUpdate()
   + DSL_PM_LineSecThresholdsUpdate()
   + DSL_PM_DataPathThresholdsUpdate()
   + DSL_PM_LineInitCountersTotalGet()
   + DSL_PM_ChannelCountersThresholdsCrossingCheck()
   + DSL_PM_LineCountersThresholdsCrossingCheck()
   + DSL_PM_DataPathCountersThresholdsCrossingCheck()
   + DSL_PM_ChannelThresholds15minSet()
   + DSL_PM_ChannelThresholds15MinSet()
   + DSL_PM_ChannelThresholds1DaySet()
   + DSL_PM_ChannelThresholds15MinGet()
   + DSL_PM_ChannelThresholds1DayGet()
   + DSL_PM_DataPathThresholds15MinSet()
   + DSL_PM_DataPathThresholds1DaySet()
   + DSL_PM_DataPathThresholds15MinGet()
   + DSL_PM_DataPathThresholds1DayGet()
   + DSL_PM_LineInitCounters15MinGet()
   + DSL_PM_LineInitCounters1DayGet()
   + DSL_PM_LineSecThresholds15MinSet()
   + DSL_PM_LineSecThresholds1DaySet()
   + DSL_PM_LineSecThresholds15MinGet()
   + DSL_PM_LineSecThresholds1DayGet()
   + DSL_PM_LineInitThresholds15MinSet()
   + DSL_PM_LineInitThresholds1DaySet()
   + DSL_PM_LineInitThresholds15MinGet()
   + DSL_PM_LineInitThresholds1DayGet()

V2.4.1 - 2007-03-05
- build scripts
  + add support for excluding groups of counters
    + new switches to build.sh: --inc-adsl-pm-channel-counters,
      --inc-adsl-pm-datapath-counters, --inc-adsl-pm-line-counters
      --inc-adsl-pm-channel-thresholds, --inc-adsl-pm-datapath-thresholds
      --inc-adsl-pm-line-thresholds
    + new switches to configure:
      --enable-adsl-pm-counters-channel, --enable-adsl-pm-counters-datapath
      --enable-adsl-pm-counters-line, --enable-adsl-pm-thresholds-channel
      --enable-adsl-pm-thresholds-datapath, --enable-adsl-pm-thresholds-line
- checking for counters/thresholds configuration options compability
  was added to source code
- IOCTL
  * PM counters IOCTLs is enclosed in appropriate ifdef brackets
  + DSL_IOCTL_arg_t structure is updated to contain all implemented
    PM counter fields
  + DSL_FIO_PM_CHANNEL_COUNTERS_15MIN_GET
  + DSL_FIO_PM_CHANNEL_COUNTERS_1DAY_GET
  + DSL_FIO_PM_LINE_SEC_COUNTERS_15MIN_GET
  + DSL_FIO_PM_LINE_SEC_COUNTERS_1DAY_GET
  + DSL_FIO_PM_LINE_SEC_COUNTERS_TOTAL_GET
- Update DSL_FwDownload()
  + add INCLUDE_ADSL_PM compile-time parenthesis
  * move pDevCtx->bFirmwareReady flag handling to Danube device specific part
- Update DSL_DEV_FwDownload() Danube-specific
  * move pDevCtx->bFirmwareReady flag handling from common DSL_FwDownload()
  + lock bsp mutex for processing time
- Update DSL_DEV_DeviceInit(): call DSL_DEV_FwDownload instead of DSL_FwDownload()
- new warning code
  + DSL_WRN_DEVICE_NO_DATA
- PM module implementation
  * update DSL_PM_CountersSave(): function calls is enclosed in appropriate
    ifdef brackets
  * update headers: function prototypes is enclosed in appropriate ifdef brackets
  * DSL_PM_ChannelCountersTotalGet() updated: temporarily danube specific code
    is removed
  * DSL_PM_DataPathCountersTotalGet() updated: temporarily danube specific code
    is removed
  * added DSL_PM_CountersRestore() call to DSL_AutobootHandleStart()
  + new configuration options
    + INCLUDE_DSL_CPE_PM_CHANNEL_COUNTERS
    + INCLUDE_DSL_CPE_PM_LINE_COUNTERS
    + INCLUDE_DSL_CPE_PM_DATA_PATH_COUNTERS
    + INCLUDE_DSL_CPE_PM_CHANNEL_THRESHOLDS
    + INCLUDE_DSL_CPE_PM_LINE_THRESHOLDS
    + INCLUDE_DSL_CPE_PM_DATA_PATH_THRESHOLDS
  + PM Counters processing splitted between FE and NE directions. Apropriate
    FE and NE threads implemented
  * DSL_PM_PollCycleUpdate() : nDirection argument added, direction specific
    handling added
  * DSL_PM_ChannelCountersUpdate() : nDirection argument added, direction
    specific handling added
  * DSL_PM_DataPathCountersUpdate() : nDirection argument added, direction
    specific handling added
  * DSL_PM_LineCountersUpdate() : nDirection argument added, direction specific
    handling added
  + DSL_PM_DirectionMutexControl()
  + DSL_PM_Lock()
  + DSL_PM_Unlock()
  + DSL_PM_HistoryUpdate()
  + DSL_PM_HistoryStatsGet()
  + DSL_PM_CountersSave()
  + DSL_PM_CountersRestore()
  + DSL_PM_ChannelCountersRestore()
  + DSL_PM_DataPathCountersRestore()
  + DSL_PM_LineCountersRestore()
  + DSL_PM_ChannelHistoryStats15MinGet()
  + DSL_PM_ChannelHistoryStats1DayGet()
  + DSL_PM_DataPathHistoryStats15MinGet()
  + DSL_PM_DataPathHistoryStats1DayGet()
  + DSL_PM_LineSecHistoryStats15MinGet()
  + DSL_PM_LineSecHistoryStats1DayGet()
  + DSL_PM_LineInitHistoryStats15MinGet()
  + DSL_PM_LineInitHistoryStats1DayGet()
  + DSL_PM_ChannelCounters15MinGet()
  + DSL_PM_ChannelCounters1DayGet()
  + DSL_PM_ChannelCountersTotalGet()
  + DSL_PM_DataPathCounters15MinGet()
  + DSL_PM_DataPathCounters1DayGet()
  + DSL_PM_DataPathCountersTotalGet()
- VINAX device specific PM module implementation added
  + DSL_PM_DEV_ChannelCountersSet()
  + DSL_PM_DEV_DataPathCountersSet()
  + DSL_PM_DEV_LineSecCountersSet()
- DANUBE device specific PM module implementation
  - remove DSL_DANUBE_ChannelCountersCurrentSet(), move it's code to
    DSL_PM_DEV_ChannelCountersSet()
  - remove DSL_DANUBE_DataPathCountersCurrentSet(), move it's code to
    DSL_PM_DEV_DataPathCountersSet()
  * check linestate for the FAR-end direction requests
  * return warnigns in case of HDLC time-outs instead of errors
  + DSL_PM_DEV_LineSecCountersGet()
  + DSL_PM_DEV_DataPathCountersSet()
  + DSL_PM_DEV_ChannelCountersSet()
- new fields in the DSL Context:
  + lineInitStatus
- Common G997 implementation added
  + DSL_G997_LineInitStatusGet()
  + DSL_G997_DeltHlinScaleGet()
  + DSL_G997_DeltHlinGet()
  + DSL_G997_DeltHlogGet()
  + DSL_G997_DeltQLNGet()
  + DSL_G997_DeltSNRGet()
- VINAX device specific G997 implementation added
  + DSL_DEV_G997_DeltHlinScaleGet()
  + DSL_DEV_G997_DeltHlinGet()
  + DSL_DEV_G997_DeltHlogGet()
  + DSL_DEV_G997_DeltQLNGet()
  + DSL_DEV_G997_DeltSNRGet()
- VINAX device specific implementation added
  + DSL_VNX_DeltHlogGet()
  + DSL_VNX_DeltSnrGet()
  + DSL_VNX_DeltQlnGet()
  + DSL_VNX_SendMsgTestParamsAuxGet()
- DANUBE device specific implementation
  + new CMV addresses added
    + DSL_CMV_ADDRESS_PLAM_ES_NE
    + DSL_CMV_ADDRESS_PLAM_ES_FE
    + DSL_CMV_ADDRESS_PLAM_SES_NE
    + DSL_CMV_ADDRESS_PLAM_SES_FE
    + DSL_CMV_ADDRESS_PLAM_LOSS_NE
    + DSL_CMV_ADDRESS_PLAM_LOSS_FE
    + DSL_CMV_ADDRESS_PLAM_UAS_NE
    + DSL_CMV_ADDRESS_PLAM_UAS_FE

V2.4.0 - 2007-03-01
Monthly Release

V2.3.4 - 2007-02-22
interface changes:
- renamed ioctl DSL_FIO_TESTMODE_CONTROL_SET to DSL_FIO_TEST_MODE_CONTROL_SET
common:
- makefiles updated
  - PM sources currently will be selected correctly
- PM module generic implementation
  + DSL_PM_HistoryCreate()
  + DSL_PM_HistoryUpdateCurItem()
  + DSL_PM_HistoryGetFillLevel()
  + DSL_PM_HistoryGetItemIdx()
  + DSL_PM_ChannelCountersUpdate()
  + DSL_PM_LineCountersUpdate()
  + DSL_PM_DataPathCountersUpdate()
  + DSL_PM_CountersUpdate()
  + new data types added to handle 15-min, 1-day counters and history values
- VINAX device specific implementation
   + DSL_DEV_ShowtimeStatusUpdate(): DSL_VNX_OnEventChannelDataRateUpdate()
     function call moced to the DSL_VNX_BearerChannelStatusUpdate()
   + DSL_VNX_SendMsgTr1Control()
   + DSL_PM_DEV_LineSecCountersGet()
- restart mutex added for FW download order regulation
- Line state is set to LINESTATE_NOT_INITIALIZED when restart now
- refactoring
  * DSL_PM_DEV_ChannelCountersCurrentGet renamed to DSL_PM_DEV_ChannelCountersGet
  * DSL_PM_DEV_DataPathCountersCurrentGet renamed to DSL_PM_DEV_DataPathCountersGet
- DANUBE device specific implementation
  * make it possible to compile Danube part without PM
  * update DSL_EVENT_I_CHANNEL_DATARATE_SHIFT_THRESHOLD_CROSSING implementation
  * liniInitCounters for Danube is moved from DSL Context to device specific data

V2.3.3 - 2007-02-16
interface changes:
- new IOCTLs defined
  + DSL_FIO_AUTOBOOT_STATUS_GET
  + DSL_FIO_PM_CHANNEL_THRESHOLDS_15MIN_SET
  + DSL_FIO_CHANNEL_THRESHOLDS_1DAY_SET
  + DSL_FIO_CHANNEL_THRESHOLDS_15MIN_GET
  + DSL_FIO_CHANNEL_THRESHOLDS_1DAY_GET
  + DSL_FIO_PM_DATA_PATH_THRESHOLDS_15MIN_SET
  + DSL_FIO_PM_DATA_PATH_THRESHOLDS_1DAY_SET
  + DSL_FIO_PM_DATA_PATH_THRESHOLDS_15MIN_GET
  + DSL_FIO_PM_DATA_PATH_THRESHOLDS_1DAY_GET
- Renamed and moved event status masking functions
  + DSL_G997_StatusEventMaskConfigSet -> DSL_EventStatusMaskConfigSet
  + DSL_G997_StatusEventMaskConfigGet -> DSL_EventStatusMaskConfigGet
common:
- new fields in the DSL Context:
  + PM
- VINAX device specific implementation added
  + DSL_DEV_AutobootHandleFwRequest()
  + DSL_VNX_SendMsgSelectedProfileVdsl2Get()
  * DSL_VNX_NeInventoryGet() : extended with the G994 Vendor ID parameter
  + DSL_VNX_OnEventChannelDataRateUpdate()
  + DSL_VNX_OnEventChannelDataRateThresholdCrossingUpdate()
  * DSL_DEV_ShowtimeStatusUpdate() : redesign
- PM module generic implementation
  + PM context
  + Sync/Poll mechanism implemented
  + DSL_PM_Start()
  + DSL_PM_Stop()
  + DSL_PM_Reset()
  + DSL_PM_SyncModeSet()
  + DSL_PM_ThreadMain()
- new file src\pm\drv_dsl_cpe_pm_core.c
- new file src\include\drv_dsl_cpe_pm_core.h
- complex binary size optimization
  * DSL_CTX_WRITE / DSL_CTX_READ: added function version of this macros
  + DSL_CTX_WRITE_SCALAR / DSL_CTX_READ_SCALAR: macros to write/read scalar
    values
- event poll times is converted to milliseconds within DSL CPE API
- comments updated
- DSL_DEV_DBG_DeviceMessageSend is implemented for Danube
- IOCTL handler
  + DSL_FIO_DBG_DEVICE_MESSAGE_SEND implemented
- DSL CPE API restart/initialization with autobootControlSet = DSL_AUTOBOOT_CTRL_STOP
  implemented
- DSL_EVENT_S_INIT_READY event implemented
- DSL_AutobootHandleFwRequest() is separated to two device dependent functions
- OS layer: DSL_GetTime() implemented for Linux
- Testmode quiet is implemented for Danube
- Events implementation for Danube
  + DSL_DANUBE_FailReasonGet()
  + DSL_EVENT_S_LINIT_FAILURE
  + DSL_EVENT_I_CHANNEL_DATARATE_SHIFT_THRESHOLD_CROSSING

V2.3.2 - 2007-02-09
- common timeout handling added
   + new macro DSL_MAX_TIMEOUT_NUM to define number of timeouts to be handled
- common event handling
   + DSL_EVENT_S_LINE_STATE
   + DSL_HandleLinitValue()
 - VINAX device specific events handling implementation added
   + DSL_EVENT_I_LINE_FAILURES
   + DSL_EVENT_I_DATA_PATH_FAILURES
   + DSL_EVENT_S_CHANNEL_DATA_RATE
   + DSL_EVENT_S_CHANNEL_DATA_RATE_SHIFT_THRESHOLD_CROSSING
   + DSL_EVENT_S_LINIT_FAILURE
   + DSL_EVENT_S_FE_INVENTORY_AVAILABLE
- DANUBE device specific implementation
   + DSL_DANUBE_LineFeaturesUpdate()
   * DSL_DEV_AutobootHandleStart()
     - line features handling added
     - line startup mode handling added
   + DSL_DANUBE_ChannelStatusGet()
   * DSL_DANUBE_ChannelRateUpdate()
     - data rate events handling added
   * DSL_DANUBE_LineFailuresUpdate()
     - failures events handling added
   * DSL_DEV_G997_ChannelStatusGet()
     - remove CMV code, call DSL_DANUBE_ChannelStatusGet() instead
   + new CMV addresses defined:
     - DSL_CMV_ADDRESS_OPTN_ALG_CONTROL
     - DSL_CMV_ADDRESS_OPTN_ALG_CONTROL2
- VINAX device specific implementation added
   + DSL_VNX_SendMsgTxControlSet()
   + DSL_VNX_FailReasonGet()
   + DSL_VNX_LineFailuresStatusUpdate()
   + DSL_VNX_OnLineInventoryFe()
   + DSL_DEV_OnTimeoutEvent()
   * DSL_DEV_AutobootHandleStart() : modem activation in the testmodes added
   * DSL_DEV_AutobootHandleException() : modem fail reason and line failures update added
- Test modes implemented (VINAX)
   * DSL_DEV_ModemWriteConfig() : test modes configurations added
- Timeout events implementation added
- new fields in the DSL Context:
   + TimeoutListsContext
   + TestModeControl
   + channelDataRateThresholdUs
   + channelDataRateThresholdDs
   + bSEM_LineState
   + bSEM_DataRate
   + bSEM_Linit
   + bSEM_LineInventoryFe
   + bAutobootStopPending
- new file src\common\drv_dsl_cpe_timeout.c
- new file src\include\drv_dsl_cpe_timeout.h
- new file src\include\drv_dsl_cpe_vinax_msg_dmt_scope.h
- common implemetation added
   + DSL_G997_AlarmMaskLineFailuresConfigSet()
   + DSL_G997_AlarmMaskLineFailuresConfigSet()
   + DSL_G997_AlarmMaskDataPathFailuresConfigGet()
   + DSL_G997_AlarmMaskDataPathFailuresConfigGet()
   + DSL_G997_StatusEventMaskConfigSet()
   + DSL_G997_StatusEventMaskConfigGet()
   + DSL_G997_ChannelDataRateThresholdConfigSet()
   + DSL_G997_ChannelDataRateThresholdConfigGet()
   + DSL_EventGenerate()
   + DSL_OnTimeoutEvent()
   + DSL_AutobootStateSet()
   * DSL_Init() : Test mode configuration store added
   * DSL_TestModeControlSet_t extended with DSL_TESTMODE_DISABLE field
   * DSL_InitData_t extended with the TestModeControl field
   * DSL_LineStateUdate() : Line State Change event generation added
- DSL_FIO_G997_EVENT_STATUS_GET was renamed to DSL_FIO_EVENT_STATUS_GET
- refactoring:
  DSL_G997_EventStatus_t and DSL_G997_EventStatusData_t were renamed to
  DSL_EventStatus_t and DSL_EventStatusData_t accordingly and moved
  to the "drv_dsl_cpe_api.h" file
- DSL_EventDataUnion_t extended with the new fields
   + channelStatusData of type DSL_G997_ChannelStatusData_t
   + lineInitStatusData of type DSL_G997_LineInit_t
   + dataPathFailuresData of type DSL_G997_DataPathFailuresData_t
   + lineFailuresData of type DSL_G997_LineFailuresData_t
- Makefile.am changes
   + drv_dsl_cpe_timeout.c
   + drv_dsl_cpe_timeout.h
   + drv_dsl_cpe_vinax_msg_dmt_scope.h
- complex binary size optimization
   * DSL_CHECK_XXX replaced by functions
   * all error codes variables replaced by nErrCode variable
   * it is necessary to call DSL_CHECK_ERR_CODE() now
- redesign of IOCTL handler:
  common helper is used instead of similar case code
- IOCTL handler
  + DSL_FIO_TESTMODE_CONTROL_SET
- debug printouts
  + macro for definition of maximum debug level for printouts defined

V2.3.1 - 2007-02-02
interface:
- new IOCTL implemented:
   + DSL_FIO_G997_LINE_FAILURES_STATUS_GET
   + DSL_FIO_LINE_FEATURE_CONFIG_GET
   + DSL_FIO_LINE_FEATURE_CONFIG_SET
   + DSL_FIO_LINE_FEATURE_STATUS_GET
- DSL_EVENT_S_FIRMWARE_REQUEST added to the DSL_EventType_t structure
- new fields in the DSL Context:
   + bFwRequestHandled
   + fwRequestStartTime
   + nFwRequestTimeoutLimit
   + LineFeatureDataCfg
   + LineFeatureDataSts
common:
- autorestart handling extended
   + new states added to the aotoboot: DSL_AUTOBOOTSTATE_EXCEPTION,
                                    DSL_AUTOBOOTSTATE_FW_REQUEST,
                                    DSL_AUTOBOOTSTATE_FW_WAIT
   + DSL_AutobootHandleFwRequest implementation added
   + DSL_AutobootHandleFwWait implementation added
   + DSL_AutobootHandleException implementation added
   + INCLUDE_FW_REQUEST_SUPPORT macro definition temporary added to
     the drv_dsl_cpe_api.h
- VINAX device specific implementation added:
   + DSL_VNX_SendMsgLineFailuresNeStatusGet
   + DSL_VNX_SendMsgLineFailuresFeStatusGet
   + DSL_DEV_ShowtimeStatusUpdate: added line failures status update
   + DSL_DEV_DBG_DeviceMessageSend
   * DSL_VNX_ActualDataRateGet renamed to DSL_VNX_BearerChannelStatusGet
- common implementation added
   + DSL_LineFeatureConfigSet
   + DSL_LineFeatureConfigGet
   + DSL_LineFeatureStatusGet
- DANUBE specific implementation updated:
   * Autoboot state machine related changes
   * DSL_DANUBE_TotalCountersRead(): FAR end counters will not be requested
     in the states other than SHOWTIME
   * DSL_DEV_G997_LineStatusGet(): additional error checkings
   * DSL_PM_DEV_ChannelCountersCurrentGet(),
     DSL_PM_DEV_DataPathCountersCurrentGet(): FAR-end counters for the ADSL2 modes
     support added

V2.3.0 - 2007-01-31
user interface definition change(s):
- Changed ioctl(s)
  + DSL_FIO_G997_LINE_STATUS_GET
    inlcudes integral values for LATN, SATN, SNR, ACTPS, ATTNDR and ACTATP only
- New ioctl(s)
  + DSL_FIO_G997_LINE_STATUS_PER_BAND_GET
    includes per band values for LATN, SATN and SNR (only used for VDSL2 modes)

V2.2.3 - 2007-01-29
common:
- new file src\pm\drv_dsl_cpe_api_pm_danube.c
- new file src\pm\drv_dsl_cpe_api_pm_vinax.c
- new file src\pm\drv_dsl_cpe_device_pm.h
- new fields int the DSL Context:
  + ledPollingWaitQueue
  + bLedStatusOn
  + bLedNeedToFlash
  + loggingBuffer
  + lineInitCounters
  + channelCounters
  + datapathCounters
- new IOCTL implemented:
  + DSL_FIO_SHOWTIME_LOGGING_DATA_GET
  + DSL_FIO_PM_CHANNEL_COUNTERS_TOTAL_GET
  + DSL_FIO_PM_DATA_PATH_COUNTERS_TOTAL_GET
  + DSL_FIO_PM_LINE_INIT_COUNTERS_TOTAL_GET
  + DSL_FIO_G997_DATA_PATH_FAILURES_STATUS_GET
- event handling implementation added (both driver and control application)
- showtime event logging implementation added
- VINAX device specific G997 implementation added:
  + DSL_DEV_G997_BitAllocationNSCGet
  + DSL_DEV_G997_GainAllocationNscGet
  + DSL_DEV_G997_SnrAllocationNscGet
  + DSL_DEV_G997_LineInventoryGet
  + DSL_DEV_G997_LineStatusGet
  + DSL_DEV_G997_ChannelStatusGet
  * DSL_DEV_ShowtimeStatusUpdate() : added flag to destinguish between 1'st init and update,
                                     added data path failures status update
  * DSL_DEV_ModemWriteConfig() : added DSL_VNX_SendMsgLedControl() function call

V2.2.2 - 2007-01-26
user interface definition change(s):
- renamed return value within DSL_AccessCtl_t structure (old: retCode,
  new: nReturn)

V2.2.1 - 2007-01-19
interface:
- DSL_G997_LineInventory_t structure: change type of nDirection DSL_XTUDir_t instead
  of DSL_AccessDir_t
- DSL_xxx_ShowtimeStatusUpdate(): new parameter: bInit
common:
- redesign: DSL_DANUBE_RateUpdateUs() replaced by DSL_DANUBE_ChannelRateUpdate()
- new files: src/drv_dsl_cpe_fifo.c, include/drv_dsl_cpe_fifo.h
- build system modified: fifo files included in scripts
- error code changed: DSL_ERR_INVALID_PARAMETR
- new error codes: DSL_ERR_CHANNEL_RANGE, DSL_ERR_ONLY_AVAILABLE_IN_SHOWTIME
- update src/led/drv_dsl_cpe_led.c:
  - DSL_LED_FirmwareInit(): code commented out
- update src\include\drv_dsl_cpe_api_ioctl.h:
  + new fields was declared in the DSL_IOCTL_arg_t structure: g997ChannelStatus,
    g997DataPathFailures
- update src\include\drv_dsl_cpe_cmv_danube.h:
  + new CMV addresses: DSL_CMV_ADDRESS_PLAM_FE_FAILURES,
    DSL_CMV_ADDRESS_INFO_LATENCY_PATH_PROPS_DS,
    DSL_CMV_ADDRESS_INFO_LATENCY_PATH_PROPS_US
- new fields int the DSL Context:
  + nChannelActualDataRateUs
  + nChannelActualDataRateDs
  + nChannelPreviousDataRateUs
  + nChannelPreviousDataRateDs
  + nLineFailuresNe
  + nLineFailuresFe
  + nDataPathFailuresNe
  + nDataPathFailuresFe
- OS layer changed: endianness macros added
- replace \n by DSL_CRLF macro
- update debug printouts with "DSL:" prefix
- update /src/common/drv_dsl_cpe_api.c:
  * DSL_FirmwareStartupInit(): remove call to DSL_LED_FirmwareInit()
- new IOCTL implemented: DSL_FIO_G997_CHANNEL_STATUS_GET and
  DSL_FIO_G997_DATA_PATH_FAILURES_STATUS_GET
- update src\device\drv_dsl_cpe_device_danube.c:
  + implementation:
    DSL_DANUBE_ChannelRateUpdate()
  + DSL_DEV_AutobootHandleStart(): call to DSL_DEV_LED_FirmwareInit() added
  + DSL_DEV_AutobootHandleTraining(): handle previous channel data rate
  * DSL_DANUBE_LineFailuresUpdate(): update failures for both downstream and
    upstream
- update src/include/drv_dsl_cpe_api.h
  + new macro DSL_CHECK_CHANNEL_RANGE()
- update src\g997\drv_dsl_cpe_api_g997.c:
  + implementation
    + DSL_G997_ChannelStatusGet()
    + DSL_G997_DataPathFailuresStatusGet()
- update src\g997\drv_dsl_cpe_api_g997_danube.c:
  + update implementation for US in DSL_DEV_G997_LineStatusGet() (HDLC calls)
  + implementation
    + DSL_DEV_G997_ChannelStatusGet()
- VINAX device specific G997 implementation added:
  + DSL_DEV_G997_BitAllocationNSCGet
  + DSL_DEV_G997_GainAllocationNscGet
  + DSL_DEV_G997_SnrAllocationNscGet
  + DSL_DEV_G997_LineStatusGet
  + DSL_DEV_G997_LineInventoryGet
  + DSL_DEV_G997_ChannelStatusGet
  + added device specific handling for the Data Path Failures status
- new build scripts:
  + driver\build\build_vinax_mips.sh
  + dsl_cpe_control_application\build\build_vinax_mips.sh

Modification:
- in DSL_DEV_ShowtimeStatusUpdate(). Added special handling for the showtime values update

V2.2.0 - 2007-01-18
user interface definition change(s):
- Added ioctl definitions for
  + event handling
  + showtime event logging

V2.1.6 - 2007-01-12
common:
- new script: scripts\inst_drv_dsl_cpe.sh
- new file src\g997\drv_dsl_cpe_api_g997_vinax.c
- update vinax build script, add new vinax file to makefile
- redesign:
  * DSL_ModemStart() removed, initialization part of code moved to
    DSL_AutobootThreadInit(), another to DSL_DANUBE_ModemStart()
  * DSL_DEV_ModemStart() removed, code moved to DSL_DANUBE_ModemStart
  * DSL_DEV_InventorySet() removed, code moved to DSL_G997_DEV_InventorySet()
  * interface changed: DSL_DEV_G997_LineInventorySet()
- new error codes defined:
  + DSL_ERR_DEVICE_NO_DATA
  + DSL_ERR_DEVICE_BUSY
- update src\include\drv_dsl_cpe_api_ioctl.h:
  + new field g997LineStatus defined in DSL_IOCTL_arg_t
- update src\include\drv_dsl_cpe_cmv_danube.h:
  + new CMV addresses defined:
    - DSL_CMV_ADDRESS_INFO_LINE_STATUS_DS
    - DSL_CMV_ADDRESS_INFO_LINE_STATUS_US
    - DSL_CMV_ADDRESS_INFO_ME_HDLC_TX_BUFFER
    - DSL_CMV_ADDRESS_INFO_ME_HDLC_RX_BUFFER
    - DSL_CMV_ADDRESS_INFO_ME_HDLC_PARAMS
    - DSL_CMV_ADDRESS_INFO_RX_CLEAR_EOC
    - DSL_CMV_ADDRESS_INFO_PMD
    - DSL_CMV_ADDRESS_STAT_ME_HDLC
    - DSL_CMV_ADDRESS_STAT_POWER_STATE
    - DSL_CMV_ADDRESS_CNTL_ME_HDLC
  + new enum DSL_CMV_PMD_Index
- update src\include\drv_dsl_cpe_debug.h and src\common\drv_dsl_cpe_debug.c
  + new variable: DSL_DBG_PRN_DIR
- update src\include\drv_dsl_cpe_device_danube.h and
  + implementation:
    - DSL_DANUBE_HdlcWrite()
    - DSL_DANUBE_HdlcRead()
  + HDLC status macros defined
- update src\include\drv_dsl_cpe_intern.h:
  + new field added to DSL Context: lineInventory
- update src\include\drv_dsl_cpe_os_linux.h
  + new macros: DSL_WAIT() and DSL_Le2Cpu()
- update src\g997\drv_dsl_cpe_g997_danube.c
  * DSL_DEV_G997_BitAllocationNSCGet(), DSL_DEV_G997_GainAllocationNscGet():
    check if modem is ready, make these functions thread-safe
  * DSL_DEV_G997_SnrAllocationNscGet(): fix possible bugs,
    check if modem is ready, make this function thread-safe
  - implementation
    + DSL_DANUBE_G997_ActPSD_Get()
    + DSL_DEV_G997_LineStatusGet()
- update src\device\drv_dsl_cpe_device_danube.c
  - implementation
    + DSL_DANUBE_L3StatusGet()
    + DSL_DANUBE_HdlcStatusGet()
    + DSL_DANUBE_HdlcResolvedGet()
    + DSL_DANUBE_ModemStart()
    + DSL_DANUBE_HdlcSend()
    + DSL_DANUBE_HdlcWrite()
    + DSL_DANUBE_HdlcRead()
  * DSL_DEV_FwDownload(): call DSL_DANUBE_ModemStart()
- update src\common\drv_dsl_cpe_api.c
  * DSL_IoctlHandle(): dynamic memory allocation instead of stack-allocation

V2.1.5 - 2006-12-29
common:
- refactoring
  * move FE/NE to the end of definition names
- update src\common\drv_dsl_cpe_api.c
  + add debug printouts
  * DSL_InitDataPrepare(): fix bug
  * DSL_IoctlHandle(): new IOCTLs supported
    - DSL_FIO_G997_SNR_ALLOCATION_NSC_GET
    - DSL_FIO_G997_GAIN_ALLOCATION_NSC_GET
    - DSL_FIO_G997_LINE_INVENTORY_GET
    - DSL_FIO_G997_LINE_INVENTORY_SET
- update src\device\drv_dsl_cpe_device_danube.c
  * DSL_DANUBE_CmvPrepare(): add debug printouts
  * DSL_DEV_InventorySet(): fix bugs regarding to application of '|' and '||'
- update g997\drv_dsl_cpe_api_g997.c
  * initial implementation of DSL_G997_ChannelStatusGet() and
    DSL_G997_LineStatusGet()
  + implementation
    - DSL_G997_GainAllocationNscGet()
    - DSL_G997_LineInventoryGet()
    - DSL_G997_LineInventorySet()
- update g997\drv_dsl_cpe_api_g997_danube.c
  + implementation
    - DSL_DEV_G997_GainAllocationNscGet()
    - DSL_DEV_G997_LineInventoryGet()
    - DSL_DEV_G997_LineInventorySet()
  * DSL_DEV_G997_SnrAllocationNscGet(): finish implementation
  * initial implementation of DSL_DEV_G997_ChannelStatusGet() and
    DSL_DEV_G997_LineStatusGet()
- update include\drv_dsl_cpe_api_ioctl.h
  + new fields defined in DSL_IOCTL_arg_t: g997GainAllocationNsc, g997LineInvertory
    g997LineInvertoryNe
- update include\drv_dsl_cpe_cmv_danube.h
  + new CMV addresses: DSL_CMV_ADDRESS_INFO_GAIN_US, DSL_CMV_ADDRESS_INFO_GAIN_DS,
    DSL_CMV_ADDRESS_INFO_VENDORID_FE, DSL_CMV_ADDRESS_INFO_SERIALNUM_FE,
    DSL_CMV_ADDRESS_INFO_VERSIONNUM_FE, DSL_CMV_ADDRESS_INFO_NE_VENDORID_G994_FE,
    DSL_CMV_ADDRESS_INFO_NE_VENDORID_G994_NE, DSL_CMV_ADDRESS_INFO_SELFTEST,
    DSL_CMV_ADDRESS_INFO_XTSE_FE
- update include/drv_dsl_cpe_device_g997.h
  + new prototypes
    - DSL_DEV_G997_GainAllocationNscGet()
    - DSL_DEV_G997_LineStatusGet()
    - DSL_DEV_G997_LineInventoryGet()
    - DSL_DEV_G997_LineInventorySet()
    - DSL_DEV_G997_ChannelStatusGet()

V2.1.4 - 2006-12-22
common:
- update src\device\drv_dsl_cpe_device_vinax.c
  + implementation
    - DSL_VNX_xxx()
    - DSL_DEV_ShowtimeStatusUpdate()
    - DSL_DEV_InitDataPrepare()
    - DSL_DEV_InitDataFree()
  + DSL_VNX_ModemRestart(): replace FW download IOCTL call with the
    DSL_DEV_FwDownload() function
  + DSL_DEV_AutobootHandleTraining(): replace DSL_LineStateGet() function calls
    with CTX_READ() macro
- new files g997/drv_dsl_cpe_api_g997_danube.c, include/drv_dsl_cpe_device_g997.h
- update makefiles:
  + support for new files
- update src\include\drv_dsl_cpe_intern.h
  * update DSL Context structure - 2nd firmware, showtime lock flag, line failures,
    current SNRM fields added
  + new structures defined
- update include\drv_dsl_cpe_cmv_danube.h
  + new CMV addresses: DSL_CMV_ADDRESS_INFO_SNRA_DS, DSL_CMV_ADDRESS_INFO_BAT_US,
    DSL_CMV_ADDRESS_INFO_BAT_DS, DSL_CMV_ADDRESS_INFO_SNRA_US,
    DSL_CMV_ADDRESS_PLAM_NE_FAILURES, DSL_CMV_ADDRESS_PLAM_SNRM_0_1DB,
    DSL_CMV_ADDRESS_PLAM_SNRM
- update include\drv_dsl_cpe_api_ioctl.h
  + new fields defined in DSL_IOCTL_arg_t: g997BitAllocationNsc,
    g997SnrAllocationNsc
- update g997\drv_dsl_cpe_api_g997.c
  + new header drv_dsl_cpe_device_g997.h included
  + implementation
    - DSL_G997_BitAllocationNSCGet()
    - DSL_G997_SnrAllocationNscGet()
- new file g997\drv_dsl_cpe_api_g997_danube.c
  + implementation
    - DSL_DEV_G997_BitAllocationNSCGet()
    - DSL_DEV_G997_SnrAllocationNscGet()
- update src\device\drv_dsl_cpe_device_danube.c
  * fix some compile-time warnings
  * access to DSL Context data is multithread safe now,
    functions code is reentrant
  + add debug printouts
  + implementation
    * DSL_DANUBE_SnrmDsUpdate()
    * DSL_DANUBE_LineFailuresUpdate()
  * DSL_DEV_AutobootHandleRestart(): download FW each restart
  * DSL_DEV_LineStateGet(): fix showtime handling
- update src\common\drv_dsl_cpe_api.c
  + add debug printouts
  + implementation
    - DSL_FwCopy()
    - DSL_FwStore()
  * DSL_Cleanup(): release FW memory
  * DSL_InitDataPrepare(): new FW functions used
  * DSL_IoctlHandle(): new IOCTLs supported
    - DSL_FIO_G997_BIT_ALLOCATION_NSC_GET
- update src\common\drv_dsl_cpe_autoboot.c
  * DSL_AutobootThreadInit(): tread-safe data access
  + implementation
    DSL_AutobootHandleShowtime()
user interface change(s):
- DSL_InitDataPrepare() DSL_Error_t return type instead of DSL_void_t,
  first argument of type DSL_Context_t* added
- refactoring
  * Cmv related stuff rename: DSL_DEV_xxx to DSL_DANUBE_xxx
  * update usage of DSL_LineStatexxx types
- make CMV-related stuff visible outside main Danube device file

V2.1.3 - 2006-12-18
user interface change(s):
- Changed data structures in ioctl to seperate the control parameters from
  the configuration/status data

V2.1.2 - 2006-12-15
common:
- update src\common\drv_dsl_cpe_api.c
  + add debug printouts
  * correct debug printouts in the DSL_Init()
  * move mutex init calls to DSL_DriverHandleGet()
  * update firmware boot routines, add 2nd Fw parameters
  * update DSL_Init(), remove FW checks
  * DSL_IoctlHandle(): new IOCTLs supported
    - DSL_FIO_G997_XTU_SYSTEM_ENABLING_CONFIG_SET
    - DSL_FIO_G997_XTU_SYSTEM_ENABLING_CONFIG_GET
    - DSL_FIO_G997_XTU_SYSTEM_ENABLING_STATUS_GET
  * remove unnecessary code from the DSL_LineStateUpdate()
  + implementation:
    - DSL_ShowtimeStatusUpdate()
    - DSL_TwosComplement16_HexToInt()
- refactoring
  - remove BSP prefix from function names
  * update function names (FW->Fw)
- update src\common\drv_dsl_cpe_os_linux.c
  * DSL_DRV_Write()
    - use DSL context instead of device handle in FW download call
- update src\device\drv_dsl_cpe_device_danube.c
  * move low level driver IOCTL call from main header
  + implementation
    - DSL_DANUBE_RateUpdateUs()
    - DSL_DANUBE_XTUSystemEnablingConfigSend()
    - DSL_DANUBE_XTUSystemEnablingStatusUpdate()
    - DSL_DANUBE_ShowtimeReached()
    - DSL_DEV_ShowtimeStatusUpdate()
  * DSL_DEV_DriverHandleDelete(): return DSL_Error_t
  * DSL_DEV_FwDownload(): 2nd firmware
  + add debug printouts
  * DSL_DEV_AutobootHandleStart(): use DSL_DANUBE_XTUSystemEnablingConfigSend()
  * DSL_DEV_AutobootHandleTraining(): showtime reach handling
  * DSL_DEV_DeviceInit(): add firmware checks
- update src\device\drv_dsl_cpe_device_danube.c
  + add new headers
  * update comments
  * update printouts
  + add printouts
  + implementation
    - DSL_VNX_xxx()
    - DSL_DEV_ModemStart()
    - DSL_DEV_ModemReset()
    - DSL_DEV_InventorySet()
  * DSL_DEV_FirmwareVersionGet(), DSL_DEV_ChipHardwareVersionGet(),
    DSL_DEV_DriverVersionGet(): add pointers checks
- update src\g997\drv_dsl_cpe_api_g997.c
  + implementation
    - DSL_G997_XTUSystemEnablingConfigSet()
    - DSL_G997_XTUSystemEnablingConfigGet()
    - DSL_G997_XTUSystemEnablingStatusGet()
- update src\include\drv_dsl_cpe_api.h
   * update prototypes
   + new structures defined
- update src\include\drv_dsl_cpe_api_g997.h
   + new structures defined
- update src\include\drv_dsl_cpe_api_ioctl.h
   * update DSL_IOCTL_arg_t definition: G997 stuff added
- update src\include\drv_dsl_cpe_api_sar.h
   * update structure definitions
- update src\include\drv_dsl_cpe_cmv_danube.h
   + add DSL_CmvStatMode1_t, DSL_CmvStatMode17_t enums
   * update DSL_CmvAddress_t enum
- update src\include\drv_dsl_cpe_device.h
   + new prototype for DSL_DEV_ShowtimeStatusUpdate()
- update src\include\drv_dsl_cpe_os_linux.h
   + provide support for different major numbers

V2.1.1 - 2006-12-08
common:
- user space dsl_cpe_control application
  * uncomment INCLUDE_DSL_API_CLI, comment INCLUDE_DSL_API_CLI_LEGACY
- refactoring
  DSL_DEV_MeiBspVersionStringGet() -> DSL_DEV_DriverVersionGet()
  DSL_DEV_ChipVersionStringGet() -> DSL_DEV_ChipHardwareVersionGet()
  DSL_DEV_MeiBspVersionStringGet() -> DSL_DEV_DriverVersionGet()
  DSL_ERR_CMV_SEND_FAILED -> DSL_ERR_MSG_EXCHANGE
- new error codes: DSL_ERR_FUNCTION_WAITING_TIMEOUT, DSL_ERR_FUNCTION_WAITING
   DSL_WRN_FIRMWARE_MSG_DENIED
- new autoboot state: DSL_AUTOBOOTSTATE_DIAGNOSTIC
- removed files: src\include\drv_dsl_cpe_bsp.h, src\include\drv_dsl_cpe_cmv.h
- new files: src\include\drv_dsl_cpe_device_danube.h, src\include\drv_dsl_cpe_device_vinax.h
- remove CLI
- update src\common\drv_dsl_cpe_api.c
  + add debug printouts
  + implementation:
    - DSL_LineStateGet()
    - DSL_InitDataPrepare()
    - DSL_ModemReset()
    - DSL_InitDataFree()
    - DSL_LineStateUpdate()
    - DSL_LineStateSet()
  * DSL_IoctlHandle(): use new functions, implement
    DSL_FIO_LINE_STATE_GET handler, fix some bugs
  * adapt DSL_Init() to VINAX and 2nd FW
  * DSL_BSP_FWDownload()
    - exclude device specific code
- update src\common\drv_dsl_cpe_autoboot.c
  + add debug printouts
  * fix calls to DSL_DEV_ModemIsReady() to correspond with new interface
  * DSL_AutobootHandleStart: TRAINING state will be set after start
    is handled
  + implementation:
    - DSL_AutobootHandleRestart()
    - DSL_AutobootHandleTraining()
- update src\common\drv_dsl_cpe_os_linux.c
  * DSL_DRV_Write()
    - exclude device specific code
  + add debug printouts
  + implementation:
    - DSL_MSleep()
- new file src\device\drv_dsl_cpe_device_vinax.c
- update src\device\drv_dsl_cpe_device_danube.c
  + implementation:
    - DSL_DANUBE_ResetDFE()
    - DSL_DANUBE_HaltDFE()
    - DSL_DEV_AutobootHandleTraining()
    - DSL_DEV_AutobootHandleRestart()
    - DSL_DEV_DeviceInit()
    - DSL_DEV_ModemReset()
    - DSL_DEV_LineStateGet()
    - DSL_DEV_InitDataPrepare()
    - DSL_DEV_InitDataFree()
  * exclude device specific types from the interface
  * replace DSL_DeviceHandle_t with DSL_Context_t in the interface
  * use macro DSL_DEVICE_LOWHANDLE()
  * fix bug in the DSL_DEV_AutobootModeControlSet()
  * remove unnecessary call to DSL_DEV_CmvRead() in
    the DSL_DEV_FirmwareVersionGet()
  * remove string length argument from the interface of version functions
- update src\include\drv_dsl_cpe_api.h
  + new structure definition: DSL_DeviceLowLevelConfig_t
  * update DSL_Init_t, DSL_AutobootLoadFirmware_t structure definitions
- update src\include\drv_dsl_cpe_device.h
  + include new headers
  * exclude from the device context structure device specific fields
  + add device specific data field to device context
  * exclude device specific types from the interface
  + new prototypes:
    - DSL_DEV_DeviceInit()
    - DSL_DEV_ModemReset()
    - DSL_DEV_InitDataPrepare()
    - DSL_DEV_InitDataFree()
    - DSL_DEV_LineStateGet()
- update src\include\drv_dsl_cpe_intern.h
  + add bGotResponse field to the DSL Context structure
  * fix DSL_CTX_READ() and DSL_CTX_WRITE()
  + new prototypes:
    - DSL_ModemReset()
    - DSL_DeviceInit()
    - DSL_InitDataPrepare()
    - DSL_InitDataFree()
    - DSL_LineStateUpdate()
    - DSL_LineStateSet()
- update src\include\drv_dsl_cpe_os.h
  + new prototype:
    - DSL_MSleep()
- update src\include\drv_dsl_cpe_os_linux.h
  * include <linux/delay.h>
- update build scripts/makefiles

V2.1.0 - 2006-12-04
user interface definition change(s):
- Added definitions for new functions
  + AuxLineInventoryGet
  + DebugModuleLevelStatusGet
  + DeviceMessageSend
  + LoopLengthStatusGet
  + PosphyAddressConfigGet
  + PosphyAddressConfigSet
  + SAR_ConfigGet
  + SAR_ConfigSet
  + SAR_ReassemblyCountersGet
  + SAR_ReassemblyTableGet
  + SAR_ReassemblyTableSet
  + SAR_SegmentationCountersGet
  + SAR_SegmentationTableGet
  + SAR_SegmentationTableSet
  + UtopiaPhyAddressConfigGet
  + UtopiaPhyAddressConfigSet

V2.0.5 - 2006-12-01
common:
- user space dsl_fwload test application
  * updated to test DSL_FIO_VERSION_INFORMATION_GET
- user space dsl_cpe_control application
  * update build.sh script
  * update src/makefile.am
  * change device file name in dsl_cpe_control.h
  + add sleep() after debug printouts
- update configure.in with new version
- update src/ceoc/drv_dsl_cpe_ceoc.c
  * implementation of DSL_CEOC_FirmwareInit()
- update src/cli/drv_dsl_cpe_cli.c
  + sceletons for CLI helper functions()
- update src/led/drv_dsl_cpe_led.c
  * implementation of DSL_LED_FirmwareInit()
- update src\include\drv_dsl_cpe_os.h, src\include\drv_dsl_cpe_pm.h,
   src\include\drv_dsl_cpe_mib.h, src\include\drv_dsl_cpe_led.h,
   src\include\drv_dsl_cpe_ceoc.h, src\include\drv_dsl_cpe_autoboot.h
  * change tabs to spaces
- update src\include\drv_dsl_cpe_cli.h
  * change tabs to spaces
  + prototypes for DSL_CLI_Register(), DSL_CLI_Cleanup(), DSL_CLI_AutogenRegister()
- update src\include\drv_dsl_cpe_intern.h
  + make DSL_CTX_READ() and DSL_CTX_WRITE() macrodefinitions
  * change tabs to spaces
  * fix DSL_CHECK_MODEM_IS_READY() macrodefinitions
  + new prototype: DSL_BSP_FWDownload()
- update src\include\drv_dsl_cpe_device.h
  + new field in device context strucure: bFirmwareReady
  + new prototypes: DSL_DEV_CEOC_FirmwareInit(), DSL_DEV_LED_FirmwareInit()
   DSL_DEV_FirmwareVersionStringGet(), DSL_DEV_ChipVersionStringGet(),
   DSL_DEV_MeiBspVersionStringGet()
- update src\include\drv_dsl_cpe_cmv_danube.h
  * change tabs to spaces
  + new CMV address definitions: DSL_CMV_ADDRESS_INFO_GPIO_CONTROL,
   DSL_CMV_ADDRESS_OPTN_EVENT_INTS_CTRL
- update src\include\drv_dsl_cpe_bsp.h
  + new type definitions: DSL_DEV_LedId_t, DSL_DEV_LedType_t, DSL_DEV_LedHandler_t
  + new external function prototype IFX_ADSL_BSP_AdslLedInit()
- new error code: DSL_ERR_ONLY_SUPPORTED_WITH_DEBUG_ENABLED,
  DSL_ERR_SEMAPHORE_GET, DSL_ERR_CMV_SEND_FAILED
- update src\include\drv_dsl_cpe_api.h
  + new definition DSL_CHIPSET_TYPE_STRING
- update src\device\drv_dsl_cpe_device_danube.h
  * add debug printouts and device ready state
   to an implementation of DSL_DEV_AutobootHandleStart()
  * fix deadlock
  * add debug printouts to an implementation of DSL_DEV_ModemStart()
  + new implementation: DSL_DEV_LED_FirmwareInit(),
   DSL_DEV_CEOC_FirmwareInit(), DSL_DEV_FirmwareVersionStringGet()
  + new sceletons: DSL_DEV_ChipVersionStringGet(),
   DSL_DEV_MeiBspVersionStringGet()
- update src\common\drv_dsl_cpe_os_linux.c
  * DSL_DRV_Write() - set firmware ready flag
  * update initialization routines for CLI module
- update src\common\drv_dsl_cpe_autoboot.c
  + add debug printouts
  * update DSL_AutobootThreadStart() function to run firmware in case it is
   downloaded
  * update DSL_AutobootThreadMain() function to set bAutobootThreadStarted flag
- update src\common\drv_dsl_cpe_api.c
  + add debug printouts
  * update DSL_Init():
    - use DSL_BSP_FWDownload() instead of DSL_DEV_BSP_FWDownload()
    - move autoboot initialization to the DSL_AutobootThreadStart() routine
  * update DSL_AutobootLoadFirmware - call to DSL_BSP_FWDownload() instead of
   DSL_DEV_BSP_FWDownload()
  + implementation of DSL_DBG_ModuleLevelSet(), DSL_DBG_ModuleLevelGet(),
   DSL_VersionInformationGet()
  + DSL_IoctlHandle - add handlers for DSL_FIO_DBG_MODULE_LEVEL_SET,
   DSL_FIO_DBG_MODULE_LEVEL_GET, DSL_FIO_VERSION_INFORMATION_GET

V2.0.4 - 2006-11-24
common:
- new user space test application
 + new dsl_fwboot utility - it can test firmware loading and start/stop/restart
   autoboot thread
 + build scripts for dsl_fwboot utility
- sceletons for the new functions, file src/ceoc/drv_dsl_cpe_ceoc.c
  + DSL_CEOC_FirmwareInit()
- sceletons for the new functions, file src/led/drv_dsl_cpe_led.c
  + DSL_LED_FirmwareInit()
- sceletons for the new functions, file src\common\drv_dsl_cpe_autoboot.c
  + DSL_AutobootHandleRestart()
  + DSL_AutobootHandleShowtime()
  + DSL_AutobootHandleTraining()
- new file: src\cli\drv_dsl_cpe_cli_exec.c. Implementation of CLI internal
    functions
  + sceleton of DSL_CLI_Run
- change memory allocation system. Separate functions that returns continuous
    and non-continuous in physical memory blocks (src\common\drv_dsl_cpe_os_linux.c,
    src\include\drv_dsl_cpe_os.h, src\include\drv_dsl_cpe_os_linux.h)
  + new functions DSL_PMalloc(returns continuous in physical memory blocks),
    DSL_VMalloc (returns any blocks)
- add additional debug printouts (all files)
- new/update/implement functions, file src\common\drv_dsl_cpe_api.c
  + DSL_DriverHandleCleanup() - cleans up device-dependend structures allocated
    during device open and initialization process
  + DSL_ModemStart() - starts up a firmware
  * DSL_Init() - update for firmware download and firmware starting up
  * DSL_AutobootLoadFirmware() - implementation
  * DSL_AutobootControlSet() - implementation
  * DSL_IoctlHandle() - update to handle implemented IOCTLs
  * DSL_LowDeviceGet() - interface changed
- new/update/implement functions, file src\common\drv_dsl_cpe_autoboot.c
  + DSL_AutobootThreadInit() - initializes autoboot thread
  + DSL_AutobootThreadStop() - stops autoboot thread
  * DSL_AutobootThreadRestart() - update
  * DSL_AutobootThreadStart() - update
  * DSL_AutobootThreadMain() - update
  * DSL_AutobootStateCheck() - update
  * DSL_FirmwareStartupInit() - update
  * DSL_AutobootHandleStart() - update, device-dependent implementation moved
    to device file
  - DSL_AutobootModeControlSet() - moved to device file
- enable debug printouts in src\common\drv_dsl_cpe_debug.c
- new/update/implement functions, file src\common\drv_dsl_cpe_mib.c
  * DSL_MIB_IoctlHandle() - interface changed
- new/update/implement functions, file src\device\drv_dsl_cpe_device_danube.c
  + DSL_DEV_AutobootModeControlSet() - moved from drv_dsl_cpe_api.c
  + DSL_DEV_AutobootHandleStart() - handles autoboot start for a device
  + DSL_DEV_ModemStart() - handles modem start for a device
  + DSL_DEV_BspIoctl() - send ioctl to low level driver
  + DSL_DEV_InventorySet() - sends inventory data
- new error code: DSL_ERR_MODEM_NOT_READY
- update configure.in and src/Makefile.am
- Added handling to generate archive (lib_dsl_cpe_api.a) file of driver to be
  included within lxdb kernel build

V2.0.1 - 2006-11-13
common:
- Exchanged file 'ifx_adsl_features.h' to 'drv_dsl_cpe_api_danube_kernel_config.h'
  and the included definitions
  + CONFIG_IFX_ADSL_MIB  -> INCLUDE_ADSL_MIB
  + CONFIG_IFX_ADSL_LED  -> INCLUDE_ADSL_LED
  + CONFIG_IFX_ADSL_CEOC -> INCLUDE_ADSL_CEOC

V2.0.0 - 2006-11-09
common:
- Introduced version number
  + Version numbers equal or bigger than V2.0.0 are used for new generation
    DSL CPE API interface
  + Implementation is based on G.997.1 to support ADSL1/2/2+ and VDSL2
- Established complete build process using scripts for autogen tools in context
  of buildroot environment
