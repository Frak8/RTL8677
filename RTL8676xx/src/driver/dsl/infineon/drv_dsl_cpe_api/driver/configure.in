
AC_REVISION($Revision: 1.63 $)

AC_INIT([DSL CPE API driver],[3.3.2],[],[drv_dsl_cpe_api])

AC_CONFIG_SRCDIR(src/Makefile.am)
AM_INIT_AUTOMAKE

AC_CONFIG_HEADER(src/include/drv_dsl_cpe_api_config.h)

#
# save the configure arguments
#
CONFIGURE_OPTIONS="$ac_configure_args"
AC_SUBST(CONFIGURE_OPTIONS)

AC_PROG_CC
AC_PROG_RANLIB

dnl Enable debugging mode
AC_ARG_ENABLE(debug,
	AC_HELP_STRING(
		[--enable-debug,Enable debug info]
	),
    CFLAGS="$CFLAGS -O1 -g0"
)

dnl enable linux kernel 2.6.x support
AM_CONDITIONAL(KERNEL_2_6, false)
AC_ARG_ENABLE(linux-26,
	AC_HELP_STRING(--enable-linux-26,Enable support for linux kernel 2.6.x),
	[
		AM_CONDITIONAL(KERNEL_2_6, true)
		if test -z "$ARCH" ; then
			[ARCH=`$CC -dumpmachine | sed -e s'/-.*//' \
				-e 's/i[3-9]86/i386/' \
				-e 's/mipsel/mips/' \
				-e 's/powerpc/ppc/' \
				-e 's/sh[234]/sh/' \
			`]
		fi
		if test -n "$ARCH" ; then
			echo "Set the kernel architecture to $ARCH"
			AC_SUBST([KERNEL_ARCH],[$ARCH])
		else
			AC_MSG_ERROR([Kernel architecture not set!])
		fi
	]
)

dnl Set kernel include path
AC_ARG_ENABLE(kernel-include,
	AC_HELP_STRING(--enable-kernel-include=x,Set the target kernel include path),
	[
		if test -e $enableval/linux/kernel.h; then
			AC_SUBST([KERNEL_INCL_PATH],[$enableval])
		else
			AC_MSG_ERROR([The kernel include directory is not valid!])
		fi
	],
   [
		AC_SUBST([KERNEL_INCL_PATH],".")
	]
)

dnl Set kernel build path
AC_ARG_ENABLE(kernelbuild,
	AC_HELP_STRING(--enable-kernel-build=x,Set the target kernel build path),
	[
		if test -e $enableval/include/linux/autoconf.h; then
			AC_SUBST([KERNEL_BUILD_PATH],[$enableval])
		else
			AC_MSG_ERROR([The kernel build directory is not valid or not configured!])
		fi
	],
	[
		if test -z $KERNEL_BUILD_PATH; then
			# assume kernel was build in source dir...
			AC_SUBST([KERNEL_BUILD_PATH],[$KERNEL_INCL_PATH/..])
		fi
	]
)

dnl Set target driver cflags
AM_CONDITIONAL(ADD_DRV_CFLAGS_SET, false)
AC_ARG_ENABLE(add_drv_cflags,
	AC_HELP_STRING(--enable-add-drv-cflags=x,Set add driver cflags),
	[
		if test -n "$enableval"; then
			echo Set add drv cflags = $enableval
			AM_CONDITIONAL(ADD_DRV_CFLAGS_SET, true)
			AC_SUBST([ADD_DRV_CFLAGS],[$enableval])
		fi
	]
)

dnl Enable all debug printouts
AC_ARG_ENABLE(debug-prints,
	AC_HELP_STRING(
		[--enable-debug-prints],[Enable debug printouts (default).]
	),
	[
		if test "$enableval" = yes; then
			AC_SUBST([DSL_DEBUG_DISABLE],[no])
		else
			AC_DEFINE(DSL_DEBUG_DISABLE,,[Disabled debug prints])
			AC_SUBST([DSL_DEBUG_DISABLE],[yes])
		fi
	],
	[
		AC_DEFINE(DSL_DEBUG_DISABLE,,[Disabled debug prints])
		AC_SUBST([DSL_DEBUG_DISABLE],[yes])
	]
)

dnl enable DANUBE support
AM_CONDITIONAL(INCLUDE_DSL_CPE_API_DANUBE, false)
AC_ARG_ENABLE(danube,
	AC_HELP_STRING(
		[--enable-danube],[Add DANUBE support.]
	),
	[
		AC_DEFINE(INCLUDE_DSL_CPE_API_DANUBE,,[Add DANUBE support])
        AM_CONDITIONAL(INCLUDE_DSL_CPE_API_DANUBE, true)
		AC_SUBST([DSL_DEVICE_NAME],[Danube])
	]
)

dnl enable AMAZON_SE support
AM_CONDITIONAL(INCLUDE_DSL_CPE_API_AMAZON_SE, false)
AC_ARG_ENABLE(amazon_se,
    AC_HELP_STRING(
        [--enable-amazon-se],[Add AMAZON_SE support.]
    ),
    [
        AC_DEFINE(INCLUDE_DSL_CPE_API_AMAZON_SE,,[Add AMAZON_SE support])
        AM_CONDITIONAL(INCLUDE_DSL_CPE_API_AMAZON_SE, true)
        AC_SUBST([DSL_DEVICE_NAME],[Amazon_se])
    ]
)

dnl enable VINAX support
AM_CONDITIONAL(INCLUDE_DSL_CPE_API_VINAX, false)
AC_ARG_ENABLE(vinax,
	AC_HELP_STRING(
		[--enable-vinax],[Add VINAX support.]
	),
	[
		AC_DEFINE(INCLUDE_DSL_CPE_API_VINAX,,[Add VINAX support])
        AM_CONDITIONAL(INCLUDE_DSL_CPE_API_VINAX, true)
		AC_SUBST([DSL_DEVICE_NAME],[Vinax])
	]
)

dnl set the number of channels per line
AC_ARG_WITH(channels-per-line,
   AS_HELP_STRING(
      [--with-channels-per-line=value],[Channels per line to support.]
   ),
   [
      if test "$withval" = yes; then
         AC_MSG_ERROR([ Please provide a value for the channels per line ]);
      fi
      AC_DEFINE_UNQUOTED(DSL_CHANNELS_PER_LINE,$withval, [Channels per line to support])
      AC_SUBST([DSL_CHANNELS_PER_LINE],[$withval])
   ]
)

dnl enable ADSL MIB support
AM_CONDITIONAL(INCLUDE_DSL_ADSL_MIB, false)
AC_ARG_ENABLE(adsl-mib,
	AC_HELP_STRING(
		[--enable-adsl-mib],[Include ADSL MIB support]
	),
	[
		if test "$enableval" = yes; then
			AC_DEFINE(INCLUDE_DSL_ADSL_MIB,,[Include ADSL MIB support])
			AM_CONDITIONAL(INCLUDE_DSL_ADSL_MIB, true)
			AC_SUBST([INCLUDE_DSL_ADSL_MIB],[yes])
		else
			AC_SUBST([INCLUDE_DSL_ADSL_MIB],[no])
		fi
	],
	[
		AC_SUBST([INCLUDE_DSL_ADSL_MIB],[no])
	]
)

dnl enable ADSL LED support
AM_CONDITIONAL(INCLUDE_ADSL_LED, false)
AC_ARG_ENABLE(adsl-led,
	AC_HELP_STRING(
		[--enable-adsl-led],[Include ADSL Data LED support]
	),
	[
		if test "$enableval" = yes; then
			AC_DEFINE(INCLUDE_ADSL_LED,,[Include ADSL LED support])
			AM_CONDITIONAL(INCLUDE_ADSL_LED, true)
			AC_SUBST([INCLUDE_ADSL_LED],[yes])
		else
			AC_SUBST([INCLUDE_ADSL_LED],[no])
		fi
	],
	[
		AC_SUBST([INCLUDE_ADSL_LED],[no])
	]
)

dnl enable DSL CEOC support
AM_CONDITIONAL(INCLUDE_DSL_CEOC, false)
AC_ARG_ENABLE(dsl-ceoc,
	AC_HELP_STRING(
		[--enable-dsl-ceoc],[Include DSL CEOC support]
	),
	[
		if test "$enableval" = yes; then
			AC_DEFINE(INCLUDE_DSL_CEOC,,[Include DSL CEOC support])
			AM_CONDITIONAL(INCLUDE_DSL_CEOC, true)
			AC_SUBST([INCLUDE_DSL_CEOC],[yes])
		else
			AC_SUBST([INCLUDE_DSL_CEOC],[no])
		fi
	],
	[
		AC_SUBST([INCLUDE_DSL_CEOC],[no])
	]
)

dnl enable DELT static data support
AM_CONDITIONAL(DSL_CPE_STATIC_DELT_DATA, false)
AC_ARG_ENABLE(dsl_delt_static,
	AC_HELP_STRING(
		[--enable-dsl-delt-static],[Include DSL DELT static data support]
	),
	[
		if test "$enableval" = yes; then
			AC_DEFINE(DSL_CPE_STATIC_DELT_DATA,,[Include DSL DELT static data support])
			AM_CONDITIONAL(DSL_CPE_STATIC_DELT_DATA, true)
			AC_SUBST([DSL_CPE_STATIC_DELT_DATA],[yes])
		else
			AC_SUBST([DSL_CPE_STATIC_DELT_DATA],[no])
		fi
	],
	[
		AC_SUBST([DSL_CPE_STATIC_DELT_DATA],[no])
	]
)

dnl enable PM support
AM_CONDITIONAL(INCLUDE_DSL_PM, false)
AC_ARG_ENABLE(dsl_pm,
	AC_HELP_STRING(
		[--enable-dsl-pm],[Include DSL PM support]
	),
	[
		if test "$enableval" = yes; then
			AC_DEFINE(INCLUDE_DSL_PM,,[Include DSL PM support])
			AM_CONDITIONAL(INCLUDE_DSL_PM, true)
			AC_SUBST([INCLUDE_DSL_PM],[yes])
		else
			AC_SUBST([INCLUDE_DSL_PM],[no])
		fi
	],
	[
		AC_SUBST([INCLUDE_DSL_PM],[no])
	]
)

dnl enable PM channel counters support
AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_CHANNEL_COUNTERS, false)
AC_ARG_ENABLE(dsl_pm_channel_counters,
	AC_HELP_STRING(
		[--enable-dsl-pm-channel-counters],[Include DSL PM channel counters support]
	),
	[
		if test "$enableval" = yes; then
			AC_DEFINE(INCLUDE_DSL_CPE_PM_CHANNEL_COUNTERS,,[Include DSL PM channel counters support])
			AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_CHANNEL_COUNTERS, true)
			AC_SUBST([INCLUDE_DSL_CPE_PM_CHANNEL_COUNTERS],[yes])
		else
			AC_SUBST([INCLUDE_DSL_CPE_PM_CHANNEL_COUNTERS],[no])
		fi
	],
	[
		AC_SUBST([INCLUDE_DSL_CPE_PM_CHANNEL_COUNTERS],[no])
	]
)

dnl enable PM datapath counters support
AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_DATA_PATH_COUNTERS, false)
AC_ARG_ENABLE(dsl_pm_datapath_counters,
	AC_HELP_STRING(
		[--enable-dsl-pm-datapath-counters],[Include DSL PM datapath counters support]
	),
	[
		if test "$enableval" = yes; then
			AC_DEFINE(INCLUDE_DSL_CPE_PM_DATA_PATH_COUNTERS,,[Include DSL PM datapath counters support])
			AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_DATA_PATH_COUNTERS, true)
			AC_SUBST([INCLUDE_DSL_CPE_PM_DATA_PATH_COUNTERS],[yes])
		else
			AC_SUBST([INCLUDE_DSL_CPE_PM_DATA_PATH_COUNTERS],[no])
		fi
	],
	[
		AC_SUBST([INCLUDE_DSL_CPE_PM_DATA_PATH_COUNTERS],[no])
	]
)

dnl enable PM line counters support
AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_LINE_COUNTERS, false)
AC_ARG_ENABLE(dsl_pm_line_counters,
	AC_HELP_STRING(
		[--enable-dsl-pm-line-counters],[Include DSL PM line counters support]
	),
	[
		if test "$enableval" = yes; then
			AC_DEFINE(INCLUDE_DSL_CPE_PM_LINE_COUNTERS,,[Include DSL PM line counters support])
			AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_LINE_COUNTERS, true)
			AC_SUBST([INCLUDE_DSL_CPE_PM_LINE_COUNTERS],[yes])
		else
			AC_SUBST([INCLUDE_DSL_CPE_PM_LINE_COUNTERS],[no])
		fi
	],
	[
		AC_SUBST([INCLUDE_DSL_CPE_PM_LINE_COUNTERS],[no])
	]
)

dnl enable PM channel thresholds support
AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_CHANNEL_THRESHOLDS, false)
AC_ARG_ENABLE(dsl_pm_channel_thresholds,
	AC_HELP_STRING(
		[--enable-dsl-pm-channel-thresholds],[Include DSL PM channel thresholds support]
	),
	[
		if test "$enableval" = yes; then
			AC_DEFINE(INCLUDE_DSL_CPE_PM_CHANNEL_THRESHOLDS,,[Include DSL PM channel thresholds support])
			AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_CHANNEL_THRESHOLDS, true)
			AC_SUBST([INCLUDE_DSL_CPE_PM_CHANNEL_THRESHOLDS],[yes])
		else
			AC_SUBST([INCLUDE_DSL_CPE_PM_CHANNEL_THRESHOLDS],[no])
		fi
	],
	[
		AC_SUBST([INCLUDE_DSL_CPE_PM_CHANNEL_THRESHOLDS],[no])
	]
)

dnl enable PM datapath thresholds support
AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_DATA_PATH_THRESHOLDS, false)
AC_ARG_ENABLE(dsl_pm_datapath_thresholds,
	AC_HELP_STRING(
		[--enable-dsl-pm-datapath-thresholds],[Include DSL PM datapath thresholds support]
	),
	[
		if test "$enableval" = yes; then
			AC_DEFINE(INCLUDE_DSL_CPE_PM_DATA_PATH_THRESHOLDS,,[Include DSL PM datapath thresholds support])
			AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_DATA_PATH_THRESHOLDS, true)
			AC_SUBST([INCLUDE_DSL_CPE_PM_DATA_PATH_THRESHOLDS],[yes])
		else
			AC_SUBST([INCLUDE_DSL_CPE_PM_DATA_PATH_THRESHOLDS],[no])
		fi
	],
	[
		AC_SUBST([INCLUDE_DSL_CPE_PM_DATA_PATH_THRESHOLDS],[no])
	]
)

dnl enable PM line thresholds support
AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_LINE_THRESHOLDS, false)
AC_ARG_ENABLE(dsl_pm_line_thresholds,
	AC_HELP_STRING(
		[--enable-dsl-pm-line-thresholds],[Include DSL PM line thresholds support]
	),
	[
		if test "$enableval" = yes; then
			AC_DEFINE(INCLUDE_DSL_CPE_PM_LINE_THRESHOLDS,,[Include DSL PM line thresholds support])
			AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_LINE_THRESHOLDS, true)
			AC_SUBST([INCLUDE_DSL_CPE_PM_LINE_THRESHOLDS],[yes])
		else
			AC_SUBST([INCLUDE_DSL_CPE_PM_LINE_THRESHOLDS],[no])
		fi
	],
	[
		AC_SUBST([INCLUDE_DSL_CPE_PM_LINE_THRESHOLDS],[no])
	]
)

dnl enable PM total counters support
AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_TOTAL_COUNTERS, false)
AC_ARG_ENABLE(dsl_pm_total,
	AC_HELP_STRING(
		[--enable-dsl-pm-total],[Include DSL PM total counters support]
	),
	[
		if test "$enableval" = yes; then
			AC_DEFINE(INCLUDE_DSL_CPE_PM_TOTAL_COUNTERS,,[Include DSL PM total counters support])
			AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_TOTAL_COUNTERS, true)
			AC_SUBST([INCLUDE_DSL_CPE_PM_TOTAL_COUNTERS],[yes])
		else
			AC_SUBST([INCLUDE_DSL_CPE_PM_TOTAL_COUNTERS],[no])
		fi
	],
	[
		AC_SUBST([INCLUDE_DSL_CPE_PM_TOTAL_COUNTERS],[no])
	]
)

dnl enable PM history support
AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_HISTORY, false)
AC_ARG_ENABLE(dsl_pm_history,
	AC_HELP_STRING(
		[--enable-dsl-pm-history],[Include DSL PM history support]
	),
	[
		if test "$enableval" = yes; then
			AC_DEFINE(INCLUDE_DSL_CPE_PM_HISTORY,,[Include DSL PM history support])
			AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_HISTORY, true)
			AC_SUBST([INCLUDE_DSL_CPE_PM_HISTORY],[yes])
		else
			AC_SUBST([INCLUDE_DSL_CPE_PM_HISTORY],[no])
		fi
	],
	[
		AC_SUBST([INCLUDE_DSL_CPE_PM_HISTORY],[no])
	]
)

dnl enable PM showtime counters support
AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_SHOWTIME_COUNTERS, false)
AC_ARG_ENABLE(dsl_pm_showtime,
	AC_HELP_STRING(
		[--enable-dsl-pm-showtime],[Include DSL PM showtime counters support]
	),
	[
		if test "$enableval" = yes; then
			AC_DEFINE(INCLUDE_DSL_CPE_PM_SHOWTIME_COUNTERS,,[Include DSL PM showtime counters support])
			AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_SHOWTIME_COUNTERS, true)
			AC_SUBST([INCLUDE_DSL_CPE_PM_SHOWTIME_COUNTERS],[yes])
		else
			AC_SUBST([INCLUDE_DSL_CPE_PM_SHOWTIME_COUNTERS],[no])
		fi
	],
	[
		AC_SUBST([INCLUDE_DSL_CPE_PM_SHOWTIME_COUNTERS],[no])
	]
)

dnl enable PM optional parameters support
AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_OPTIONAL_PARAMETERS, false)
AC_ARG_ENABLE(dsl_pm_optional_parameters,
	AC_HELP_STRING(
		[--enable-dsl-pm-optional-parameters],[Include DSL PM optional parameters support]
	),
	[
		if test "$enableval" = yes; then
			AC_DEFINE(INCLUDE_DSL_CPE_PM_OPTIONAL_PARAMETERS,,[Include DSL PM optional parameters support])
			AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_OPTIONAL_PARAMETERS, true)
			AC_SUBST([INCLUDE_DSL_CPE_PM_OPTIONAL_PARAMETERS],[yes])
		else
			AC_SUBST([INCLUDE_DSL_CPE_PM_OPTIONAL_PARAMETERS],[no])
		fi
	],
	[
		AC_SUBST([INCLUDE_DSL_CPE_PM_OPTIONAL_PARAMETERS],[no])
	]
)

dnl enable Showtime event handling
AM_CONDITIONAL(INCLUDE_DSL_CPE_TRACE_BUFFER, false)
AC_ARG_ENABLE(adsl_trace,
	AC_HELP_STRING(
		[--enable-adsl-trace],[Include showtime event logging support]
	),
	[
		if test "$enableval" = yes; then
			AC_DEFINE(INCLUDE_DSL_CPE_TRACE_BUFFER,,[Include ADSL showtime event logging support])
			AM_CONDITIONAL(INCLUDE_DSL_CPE_TRACE_BUFFER, true)
			AC_SUBST([INCLUDE_DSL_CPE_TRACE_BUFFER],[yes])
		else
			AC_SUBST([INCLUDE_DSL_CPE_TRACE_BUFFER],[no])
		fi
	],
	[
		AC_SUBST([INCLUDE_DSL_CPE_TRACE_BUFFER],[no])
	]
)

dnl set DSL DRIVER driver include path
DEFAULT_DSL_DRIVER_INCL_PATH='.'
AC_ARG_ENABLE(driver-include,
	AC_HELP_STRING(
		[--enable-driver-include=-I/path/to/your/driver],[Set the DSL DRIVER driver include path]
	),
	[
		if test -n "$enableval"; then
			echo Set the DSL CE API driver include path to $enableval
			AC_SUBST([DSL_DRIVER_INCL_PATH],[$enableval])
		else
			echo Set the default DSL DRIVER driver include path $DEFAULT_DSL_DRIVER_INCL_PATH
			AC_SUBST([DSL_DRIVER_INCL_PATH],[$DEFAULT_DSL_DRIVER_INCL_PATH])
		fi
	]
)

dnl Set the configure params for dist check

AC_SUBST([DISTCHECK_CONFIGURE_PARAMS],[$CONFIGURE_OPTIONS])

AC_CONFIG_COMMANDS_PRE([
echo -e "------------------------------------------------------------------------"
echo -e " Configuration for drv_dsl_cpe_api:"
echo -e "  Source code location:             $srcdir"
echo -e "  Compiler:                         $CC"
echo -e "  Compiler flags:                   $CFLAGS"
echo -e "  Host System Type:                 $host"
echo -e "  Install path:                     $prefix"
echo -e "  Linux kernel include path:        $KERNEL_INCL_PATH"
echo -e "  Linux kernel build path:          $KERNEL_BUILD_PATH"
echo -e "  Linux kernel architecture:        $KERNEL_ARCH"
echo -e "  Driver Include Path               $DSL_DRIVER_INCL_PATH"
echo -e "  DSL device:                       $DSL_DEVICE_NAME"
echo -e "  Channels per line:                $DSL_CHANNELS_PER_LINE"
echo -e "  Disable debug prints:             $DSL_DEBUG_DISABLE"
echo -e "  Include ADSL trace buffer:        $INCLUDE_DSL_CPE_TRACE_BUFFER"
echo -e "  Include ADSL MIB:                 $INCLUDE_DSL_ADSL_MIB"
echo -e "  Include ADSL LED:                 $INCLUDE_ADSL_LED"
echo -e "  Include CEOC:                     $INCLUDE_DSL_CEOC"
echo -e "  Include DELT data static storage: $DSL_CPE_STATIC_DELT_DATA"
echo -e "  Include PM:                       $INCLUDE_DSL_PM"
echo -e "  Include PM total:                 $INCLUDE_DSL_CPE_PM_TOTAL_COUNTERS"
echo -e "  Include PM history:               $INCLUDE_DSL_CPE_PM_HISTORY"
echo -e "  Include PM showtime:              $INCLUDE_DSL_CPE_PM_SHOWTIME_COUNTERS"
echo -e "  Include PM optional:              $INCLUDE_DSL_CPE_PM_OPTIONAL_PARAMETERS"
echo -e "  Include PM line:                  $INCLUDE_DSL_CPE_PM_LINE_COUNTERS"
echo -e "  Include PM channel:               $INCLUDE_DSL_CPE_PM_CHANNEL_COUNTERS"
echo -e "  Include PM data path:             $INCLUDE_DSL_CPE_PM_DATA_PATH_COUNTERS"
echo -e "  Include PM line threshold:        $INCLUDE_DSL_CPE_PM_LINE_THRESHOLDS"
echo -e "  Include PM channel threshold:     $INCLUDE_DSL_CPE_PM_CHANNEL_THRESHOLDS"
echo -e "  Include PM data path threshold:   $INCLUDE_DSL_CPE_PM_DATA_PATH_THRESHOLDS"

echo -e ""
echo -e " Settings:"
echo -e "  Configure options:              $CONFIGURE_OPTIONS"
echo -e "------------------------------------------------------------------------"
])

AC_CONFIG_FILES([Makefile src/Makefile])
AC_OUTPUT
